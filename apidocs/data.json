{
    "project": {
        "name": "Cangaja API",
        "description": "Canvas Game JavaScript Framework",
        "version": "0.1.0",
        "url": "http://www.motions-media.de/"
    },
    "files": {
        "cangaja/atlas/atlas-image.js": {
            "name": "cangaja/atlas/atlas-image.js",
            "modules": {},
            "classes": {
                "CG.AtlasImage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/atlas/atlas-texturepacker.js": {
            "name": "cangaja/atlas/atlas-texturepacker.js",
            "modules": {},
            "classes": {
                "CG.AtlasTexturePacker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/base.js": {
            "name": "cangaja/base/base.js",
            "modules": {
                "CG": 1
            },
            "classes": {},
            "fors": {
                "Cangaja": 1
            },
            "namespaces": {}
        },
        "cangaja/base/bitmap.js": {
            "name": "cangaja/base/bitmap.js",
            "modules": {},
            "classes": {
                "CG.Bitmap": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/bound.js": {
            "name": "cangaja/base/bound.js",
            "modules": {},
            "classes": {
                "CG.Bound": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/buffer.js": {
            "name": "cangaja/base/buffer.js",
            "modules": {},
            "classes": {
                "CG.Buffer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/clock.js": {
            "name": "cangaja/base/clock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/delta.js": {
            "name": "cangaja/base/delta.js",
            "modules": {},
            "classes": {
                "CG.Delta": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/entity.js": {
            "name": "cangaja/base/entity.js",
            "modules": {},
            "classes": {
                "CG.Entity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/intro.js": {
            "name": "cangaja/base/intro.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/point.js": {
            "name": "cangaja/base/point.js",
            "modules": {},
            "classes": {
                "CG.Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/base/vector.js": {
            "name": "cangaja/base/vector.js",
            "modules": {},
            "classes": {
                "CG.Vector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-bridge.js": {
            "name": "cangaja/box2d/b2d-bridge.js",
            "modules": {},
            "classes": {
                "CG.B2DBridge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-chainshape.js": {
            "name": "cangaja/box2d/b2d-chainshape.js",
            "modules": {},
            "classes": {
                "CG.B2DChainShape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-circle.js": {
            "name": "cangaja/box2d/b2d-circle.js",
            "modules": {},
            "classes": {
                "CG.B2DCirlce": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-entity.js": {
            "name": "cangaja/box2d/b2d-entity.js",
            "modules": {},
            "classes": {
                "CG.B2DEntity": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-fizzx-loader.js": {
            "name": "cangaja/box2d/b2d-fizzx-loader.js",
            "modules": {},
            "classes": {
                "CG.B2DFizzXLoader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-line.js": {
            "name": "cangaja/box2d/b2d-line.js",
            "modules": {},
            "classes": {
                "CG.B2DLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-polygon.js": {
            "name": "cangaja/box2d/b2d-polygon.js",
            "modules": {},
            "classes": {
                "CG.B2DPolygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-rectangle.js": {
            "name": "cangaja/box2d/b2d-rectangle.js",
            "modules": {},
            "classes": {
                "CG.B2DRectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-rope.js": {
            "name": "cangaja/box2d/b2d-rope.js",
            "modules": {},
            "classes": {
                "CG.B2DRope": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-terrain.js": {
            "name": "cangaja/box2d/b2d-terrain.js",
            "modules": {},
            "classes": {
                "CG.B2DTerrain": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/box2d/b2d-world.js": {
            "name": "cangaja/box2d/b2d-world.js",
            "modules": {},
            "classes": {
                "CG.B2DWorld": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/director.js": {
            "name": "cangaja/control/director.js",
            "modules": {},
            "classes": {
                "CG.Director": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/emitter.js": {
            "name": "cangaja/control/emitter.js",
            "modules": {},
            "classes": {
                "CG.Emitter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/layer.js": {
            "name": "cangaja/control/layer.js",
            "modules": {},
            "classes": {
                "CG.Layer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/mediaasset.js": {
            "name": "cangaja/control/mediaasset.js",
            "modules": {},
            "classes": {
                "CG.MediaAsset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/menu.js": {
            "name": "cangaja/control/menu.js",
            "modules": {},
            "classes": {
                "CG.Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/morph.js": {
            "name": "cangaja/control/morph.js",
            "modules": {},
            "classes": {
                "CG.Morph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/screen.js": {
            "name": "cangaja/control/screen.js",
            "modules": {},
            "classes": {
                "CG.Screen": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/sequence.js": {
            "name": "cangaja/control/sequence.js",
            "modules": {},
            "classes": {
                "CG.Sequence": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/control/translate.js": {
            "name": "cangaja/control/translate.js",
            "modules": {},
            "classes": {
                "CG.Translate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/game/game.js": {
            "name": "cangaja/game/game.js",
            "modules": {},
            "classes": {
                "CG.Game": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/input/stick.js": {
            "name": "cangaja/input/stick.js",
            "modules": {},
            "classes": {
                "CG.Stick": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/renderer/canvasrenderer.js": {
            "name": "cangaja/renderer/canvasrenderer.js",
            "modules": {},
            "classes": {
                "CG.CanvasRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/spine/spine-animation.js": {
            "name": "cangaja/spine/spine-animation.js",
            "modules": {},
            "classes": {
                "CG.SpineAnimation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/animation.js": {
            "name": "cangaja/sprite/animation.js",
            "modules": {},
            "classes": {
                "CG.Animation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/button.js": {
            "name": "cangaja/sprite/button.js",
            "modules": {},
            "classes": {
                "CG.Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/particle.js": {
            "name": "cangaja/sprite/particle.js",
            "modules": {},
            "classes": {
                "CG.Particle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/sprite/sprite.js": {
            "name": "cangaja/sprite/sprite.js",
            "modules": {},
            "classes": {
                "CG.Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/text/font.js": {
            "name": "cangaja/text/font.js",
            "modules": {},
            "classes": {
                "CG.Font": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/text/text.js": {
            "name": "cangaja/text/text.js",
            "modules": {},
            "classes": {
                "CG.Text": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/map.js": {
            "name": "cangaja/tilemap/map.js",
            "modules": {},
            "classes": {
                "CG.Map": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maparea.js": {
            "name": "cangaja/tilemap/maparea.js",
            "modules": {},
            "classes": {
                "CG.MapArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/mappoint.js": {
            "name": "cangaja/tilemap/mappoint.js",
            "modules": {},
            "classes": {
                "CG.MapPoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maptilelayer.js": {
            "name": "cangaja/tilemap/maptilelayer.js",
            "modules": {},
            "classes": {
                "CG.MapTileLayer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "cangaja/tilemap/maptileproperties.js": {
            "name": "cangaja/tilemap/maptileproperties.js",
            "modules": {},
            "classes": {
                "CG.MapTileProperties": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CG": {
            "name": "CG",
            "submodules": {},
            "classes": {
                "CG.AtlasImage": 1,
                "CG.AtlasTexturePacker": 1,
                "Cangaja": 1,
                "CG.Bitmap": 1,
                "CG.Bound": 1,
                "CG.Buffer": 1,
                "CG.Delta": 1,
                "CG.Entity": 1,
                "CG.Point": 1,
                "CG.Vector": 1,
                "CG.B2DBridge": 1,
                "CG.B2DChainShape": 1,
                "CG.B2DCirlce": 1,
                "CG.B2DEntity": 1,
                "CG.B2DFizzXLoader": 1,
                "CG.B2DLine": 1,
                "CG.B2DPolygon": 1,
                "CG.B2DRectangle": 1,
                "CG.B2DRope": 1,
                "CG.B2DTerrain": 1,
                "CG.B2DWorld": 1,
                "CG.Director": 1,
                "CG.Emitter": 1,
                "CG.Layer": 1,
                "CG.MediaAsset": 1,
                "CG.Menu": 1,
                "CG.Morph": 1,
                "CG.Screen": 1,
                "CG.Sequence": 1,
                "CG.Translate": 1,
                "CG.Game": 1,
                "CG.Stick": 1,
                "CG.CanvasRenderer": 1,
                "CG.SpineAnimation": 1,
                "CG.Animation": 1,
                "CG.Button": 1,
                "CG.Particle": 1,
                "CG.Sprite": 1,
                "CG.Font": 1,
                "CG.Text": 1,
                "CG.Map": 1,
                "CG.MapArea": 1,
                "CG.MapPoint": 1,
                "CG.MapTileLayer": 1,
                "CG.MapTileProperties": 1
            },
            "fors": {
                "Cangaja": 1
            },
            "namespaces": {},
            "tag": "main",
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 1,
            "description": "CG is the base class of the cangaja framework.\nThis file includes a requestAnimationFrame polyfill.\nIt uses the simple javascript inheritance from John Resig.\n\nClass example, how to start from scratch with simple inheritance\n\n```\n\nCG.Class.extend(\"Entity\", {\n   init: function(){\n       this.myprop = 'set from constructor'\n   }\n});\n\nCG.Entity.extend(\"Point\",{\n   init: function(x, y){\n       this._super()\n       this.x = x\n       this.y = y\n   }\n});\n\nCG.Point.extend(\"Rectangle\",{\n   init: function(x, y, w, h){\n       this._super(x, y)\n       this.w = w\n       this.h = h\n   },\n   move: function(){\n   }\n});\n\n```",
            "itemtype": "main"
        }
    },
    "classes": {
        "CG.AtlasImage": {
            "name": "CG.AtlasImage",
            "shortname": "CG.AtlasImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "file": "cangaja/atlas/atlas-image.js",
            "line": 1,
            "description": "CG.AtlasImage class. It is needed when using TexturePacker atlas files.\n\n\n```\n\nvar a = new CG.AtlasImage({\n  image: 'menuscreen',\n  xoffset: 0,\n  yoffset: 0,\n  width: 10,\n  height: 20\n})\n\n```",
            "extends": "Class"
        },
        "CG.AtlasTexturePacker": {
            "name": "CG.AtlasTexturePacker",
            "shortname": "CG.AtlasTexturePacker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 1,
            "description": "CG.AtlasTexturePacker class supports loading xml and json files from . . . TexturePacker ;o)\nNo trimming at the moment, keep TexturePacker settings simple! The rotation option of TexturePacker\nwill be dropped in future releases!\nAtlasTexturePacker parses xml/json and generates new CG.AtlasImage objects in the MediaAsset manager.\nThese atlasimages are only handled within Sprite, Particle and Button class.\n\n\n\n ```\n\n // Preloader\n Game.asset.addImage('media/img/texturepacker.png', 'texturepacker') // image of texturepacker\n .addXml('media/img/texturepacker.xml', 'texturepacker-xml') // xml version of texturepacker\n .addJson('media/img/texturepacker.json', 'texturepacker-json') // json version of texturepacker\n .startPreLoad()\n\n\n\n // create texturepacker object\n var tp = new CG.AtlasTexturePacker()\n\n // load texturepacker json file\n tp.loadJson(Game.asset.getJsonByName('texturepacker-json'))\n\n // or load texturepacker xml file\n //tp.loadXml(Game.asset.getXmlByName('texturepacker-xml'))\n\n\n // add images of texturepacker to Game.asset\n Game.asset.images.push.apply(Game.asset.images, tp.getAtlasImages())\n\n ```",
            "extends": "Class"
        },
        "Cangaja": {
            "name": "Cangaja",
            "shortname": "Cangaja",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": ""
        },
        "CG.Bitmap": {
            "name": "CG.Bitmap",
            "shortname": "CG.Bitmap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/bitmap.js",
            "line": 1,
            "description": "CG.Bitmap is a simple bitmap class.\n\n```\n\nvar b = new CG.Bitmap({\n  width: 100,\n  height: 100\n})\n\n```",
            "extends": "CG.Entity"
        },
        "CG.Bound": {
            "name": "CG.Bound",
            "shortname": "CG.Bound",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/bound.js",
            "line": 1,
            "description": "CG.Bound is used at different places in the Cangaja FW.\n\n```\n\n    var b = new CG.Bound({\n          x: 0,\n          y: 0,\n          width: 120,\n          height: 120\n        })\n\n```",
            "extends": "CG.Class"
        },
        "CG.Buffer": {
            "name": "CG.Buffer",
            "shortname": "CG.Buffer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/buffer.js",
            "line": 1,
            "description": "CG.Buffer for separate canvas rendering/buffering",
            "todo": [
                "to be removed?"
            ],
            "extends": "CG.Class"
        },
        "CG.Delta": {
            "name": "CG.Delta",
            "shortname": "CG.Delta",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/delta.js",
            "line": 1,
            "description": "CG.Delta not really used at the moment ;o)",
            "extends": "Class"
        },
        "CG.Entity": {
            "name": "CG.Entity",
            "shortname": "CG.Entity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/entity.js",
            "line": 1,
            "description": "CG.Entity the base class of Cangaja\n\n\n```\n\n       var e = new CG.Entity({\n          name: 'player',\n          position: new CG.Point(100,100)\n        })\n\n```",
            "extends": "CG.Class"
        },
        "CG.Point": {
            "name": "CG.Point",
            "shortname": "CG.Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/point.js",
            "line": 1,
            "description": "CG.Point",
            "extends": "CG.Class"
        },
        "CG.Vector": {
            "name": "CG.Vector",
            "shortname": "CG.Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/base/vector.js",
            "line": 1,
            "description": "CG.Vector",
            "extends": "CG.Point"
        },
        "CG.B2DBridge": {
            "name": "CG.B2DBridge",
            "shortname": "CG.B2DBridge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 1,
            "description": "B2DBridge is a simple wrapper that creates a bridge with segments.\nJust play with the params to get a good result.\n\n\n```\n\n    var e = new CG.B2DBridge({\n          name: 'player',\n          image: this.asset.getImageByName('glowball'),\n          x: 100,\n          y: 100,\n          length: 600,\n          segments: 20\n          segmentHeight: 4,\n          world: b2world,\n          scale: 40\n    })\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DChainShape": {
            "name": "CG.B2DChainShape",
            "shortname": "CG.B2DChainShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 1,
            "description": "B2DChainShape\n\n```\n\n    var e = new CG.B2DChainShape({\n          name: 'player',\n          points: [new CG.Point(10,10), new CG.Point(300,50), new CG.Point(450,10)],\n          x: 100,\n          y: 100,\n          world: b2world,\n          scale: 40\n    })\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DCirlce": {
            "name": "CG.B2DCirlce",
            "shortname": "CG.B2DCirlce",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 1,
            "description": "B2DCircle is a simple b2CircleShape wrapper element with basic physics properties.\n\n```\n\n    var e = new CG.B2DCircle({\n          name: 'player',\n          image: this.asset.getImageByName('glowball'),\n          radius: 20,\n          x: 100,\n          y: 100,\n          world: b2world,\n          scale: 40,\n          bodyType: box2d.b2BodyType.b2_staticBody\n    })\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DEntity": {
            "name": "CG.B2DEntity",
            "shortname": "CG.B2DEntity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 1,
            "description": "B2DEntity is the base class with properties for all B2D objects.\nThis class handles also the drawings for all classes.\n\n```\n\nvar e = new CG.B2DEntity({\n  name: 'player',\n  image: new CG.Point(100,100),\n  world: b2world,\n  x: 10,\n  y: 20,\n  scale: 40\n})\n\n```",
            "extends": "CG.Entity"
        },
        "CG.B2DFizzXLoader": {
            "name": "CG.B2DFizzXLoader",
            "shortname": "CG.B2DFizzXLoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 1,
            "description": "CG.B2DFizzXLoader",
            "extends": "CG.Class",
            "deprecated": true,
            "deprecationMessage": "maybe it will removed in the future. FizzX editor development has stopped before it began ;-("
        },
        "CG.B2DLine": {
            "name": "CG.B2DLine",
            "shortname": "CG.B2DLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-line.js",
            "line": 1,
            "description": "B2DLine is a simple b2PolygonShape wrapper. There is no visible drawing\nnow in the canvas for now. It can be used to build walls, ground,. ,.\n\n```\n\nvar e = new CG.B2DLine({\n  name: 'groundline',\n  startPoint: new CG.Point(10,10),\n  endPoint: new CG.Point(500,10),\n  world: b2world,\n  scale: 40\n})\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DPolygon": {
            "name": "CG.B2DPolygon",
            "shortname": "CG.B2DPolygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 1,
            "description": "B2DPolygon  is a simple b2PolygonShape wrapper element with basic physics properties.\nIt uses PhysicsEditor json files, use export Lime + Corona (json).\nSupported options for now are friction, density and bounce and would be set to B2DPolygon.\n\n\n```\n\nvar e = new CG.B2DPolygon({\n   name: 'player',\n   image: this.asset.getImageByName('glowball'),\n   texturepacker: this.asset.getJsonByName('powerstar75'),\n   x: 100,\n   y: 100,\n   world: b2world,\n   scale: 40,\n   bodyType: box2d.b2BodyType.b2_staticBody,\n   bullet: false\n})\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DRectangle": {
            "name": "CG.B2DRectangle",
            "shortname": "CG.B2DRectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 1,
            "description": "B2DRectangle is a simple b2PolygonShape wrapper element with basic physics properties.\n\n```\n\nvar e = new CG.B2DRectangle({\n  name: 'player',\n  image: this.asset.getImageByName('glowball'),\n  x: 100,\n  y: 100,\n  world: b2world,\n  scale: 40,\n  bodyType: box2d.b2BodyType.b2_staticBody\n})\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DRope": {
            "name": "CG.B2DRope",
            "shortname": "CG.B2DRope",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 1,
            "description": "B2DRope is a simple wrapper that creates a rope with segments.\nJust play with the params to get a good result.\n\n```\n\nvar e = new CG.B2DRope({\n  name: 'player',\n  image: this.asset.getImageByName('glowball'),\n  x: 100,\n  y: 100,\n  length: 600,\n  segments: 20\n  segmentWidth: 4,\n  world: b2world,\n  scale: 40\n})\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DTerrain": {
            "name": "CG.B2DTerrain",
            "shortname": "CG.B2DTerrain",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 1,
            "description": "B2DTerrain looks similar to B2DPolygon but has more features for polygon manipulation like clipping and triangulation.\n\n```\n\nvar terrainShapes =\n[{\n   outer: [{\n       x: 0,\n       y: 100.5\n   }, {\n       x: 1024,\n       y: 100.5\n   }, {\n       x: 1024,\n       y: 768\n   }, {\n       x: 0,\n       y: 768\n   }],\n   holes: []\n}]\n\nb2world.createTerrain({\n    name: 'terrain',\n    image: false\n    terrainShape: terrainShapes,\n    x:0,\n    y:0,\n    world: b2world,\n    scale: 40\n})\n\n```",
            "extends": "CG.B2DEntity"
        },
        "CG.B2DWorld": {
            "name": "CG.B2DWorld",
            "shortname": "CG.B2DWorld",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/box2d/b2d-world.js",
            "line": 1,
            "description": "B2DWorld is a Box2dWeb wrapper with basic and easy methods for creating Box2d Objects like\nlines, circles, rectangles, polybodies, ropes and bridges. Custom B2D Objects that extends\none of the basic B2D objects can added to the B2DWorld with the addCustom method.\nThe CG.B2DWorld can attached to an CG.Screen object as layer. The B2DWorld will handle\nall physics and drawings.\n\n```\n\nvar w = new CG.B2DWorld({\n    name: 'box2d-world',\n    scale: 40,\n    debug: true,\n    sleep: true\n})\n\n```",
            "xtend": "CG.Layer"
        },
        "CG.Director": {
            "name": "CG.Director",
            "shortname": "CG.Director",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/director.js",
            "line": 1,
            "description": "CG.Director the top instance for CG.Screens, CG.Layers CG.B2DWorld, CG.Sprites and so on in the control hierarchy.\nIts main purpose is to collect CG.Screens under its hood and support some basic screen fading features.\n\n```\n\n//create top level CG.Director object\nvar director = new CG.Director()\n\n//create a CG.Screen\nvar mainscreen = new CG.Screen('mainscreen')\n\n//create a CG.Layer\nvar mainlayer = new CG.Layer('mainlayer')\n\n//create a demo CG.Sprite\nvar demosprite = new CG.Sprite(Game.asset.getImageByName('spritegfx'), new CG.Point(400, 240))\n\n//add/attach the demo sprite to the layer\nmainlayer.addElement(back)\n\n//add/attach mainscreen and mainlayer to the director\ndirector.addScreen(mainscreen.addLayer(mainlayer))\n\n```",
            "extends": "Class"
        },
        "CG.Emitter": {
            "name": "CG.Emitter",
            "shortname": "CG.Emitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/emitter.js",
            "line": 1,
            "description": "CG.Emitter that handles . . . particles.\n\n```\n\nvar e = new CG.Emitter({\n  position: new CG.Point(100,100)\n})\n\n```",
            "extends": "CG.Entity",
            "params": [
                {
                    "name": "position",
                    "description": "of emitter",
                    "type": "Point"
                }
            ]
        },
        "CG.Layer": {
            "name": "CG.Layer",
            "shortname": "CG.Layer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/layer.js",
            "line": 1,
            "description": "CG.Layer is a child of CG.Screen and a container to collect/group sprites, buttons, menus, emitters and animations\n\n```\n\nvar l = new CG.Layer({\n  name: 'layerback'\n})\n\n```",
            "extends": "CG.Class"
        },
        "CG.MediaAsset": {
            "name": "CG.MediaAsset",
            "shortname": "CG.MediaAsset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/mediaasset.js",
            "line": 1,
            "description": "CG.MediaAsset preloader and asset handler.",
            "extends": "Class"
        },
        "CG.Menu": {
            "name": "CG.Menu",
            "shortname": "CG.Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/menu.js",
            "line": 1,
            "description": "CG.Menu collects buttons an displays them with the defined margin\n\n```\n\nvar menu = new CG.Menu({\n  x: 100,\n  y: 100,\n  margin: 10\n})\n\nbutton = new CG.Button({\n   image: Game.asset.getImageByName('button'),\n   position: new CG.Point(Game.width2, 100),\n   text: 'Menu Button 1',\n   font: font,\n   callback: callbackTest\n})\nbutton.name = '#mbutton 1#'\nmenu.addButton(button)\n\nbutton = new CG.Button({\n   image: Game.asset.getImageByName('button'),\n   position: new CG.Point(Game.width2, 100),\n   text: 'Menu Button 2',\n   font: font,\n   callback: callbackTest\n})\nbutton.name = '#mbutton 2#'\nmenu.addButton(button)\n\nbutton = new CG.Button({\n   image: Game.asset.getImageByName('button'),\n   position: new CG.Point(Game.width2, 100),\n   text: 'Menu Button 3',\n   font: font,\n   callback: callbackTest\n})\nbutton.name = '#mbutton 3#'\nmenu.addButton(button)\n\n// add the menu to the layer\nlayermenu.addElement(menu)\n\n```",
            "extends": "CG.Class"
        },
        "CG.Morph": {
            "name": "CG.Morph",
            "shortname": "CG.Morph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/morph.js",
            "line": 1,
            "description": "CG.Morph to manipulate objects in size and so on.\n\n```\n\nvar e = new CG.Morph({\n  name: 'player',\n  position: new CG.Point(100,100)\n})\n\n```",
            "extends": "CG.Class"
        },
        "CG.Screen": {
            "name": "CG.Screen",
            "shortname": "CG.Screen",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/screen.js",
            "line": 1,
            "description": "CG.Screen is a child of CG.Director and a container to collect/group CG.Layers and/or CG.B2DWorld\n\n```\n\nvar s = new CG.Screen({\n  name: 'menuscreen'\n})\n\n```",
            "extends": "CG.Class",
            "params": [
                {
                    "name": "screenname",
                    "description": "the name of the screen",
                    "type": "String"
                }
            ]
        },
        "CG.Sequence": {
            "name": "CG.Sequence",
            "shortname": "CG.Sequence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/sequence.js",
            "line": 1,
            "description": "CG.Sequence container to collect/group CG.Translation objects\n\n```\n\nsequence = new CG.Sequence({\n  loop: true\n})\n\nsequence.addTranslation(\nnew CG.Translate().initBezier({\n   object: layersprites.elements[layersprites.elements.length - 2],\n   steps: 200,\n   startPoint: new CG.Point(500, 450),\n   endPoint: new CG.Point(100, 100),\n   control1: new CG.Point(-600, 600),\n   control2: new CG.Point(1200, -300)\n   }))\n.addTranslation(new CG.Translate().initTween({\n       object: layersprites.elements[layersprites.elements.length - 2],\n       steps: 200,\n       startPoint: new CG.Point(100, 100),\n       endPoint: new CG.Point(550, 150)\n   }))\n.addTranslation(new CG.Translate().initTween({\n       object: layersprites.elements[layersprites.elements.length - 2],\n       steps: 150,\n       startPoint: new CG.Point(550, 150),\n       endPoint: new CG.Point(100, 400)\n   }))\n.addTranslation(new CG.Translate().initTween({\n       object: layersprites.elements[layersprites.elements.length - 2],\n       steps: 100,\n       startPoint: new CG.Point(100, 400),\n       endPoint: new CG.Point(550, 450)\n   }))\n\n```",
            "extends": "Class"
        },
        "CG.Translate": {
            "name": "CG.Translate",
            "shortname": "CG.Translate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/control/translate.js",
            "line": 1,
            "description": "CG.Translate moving a object",
            "extends": "CG.Class"
        },
        "CG.Game": {
            "name": "CG.Game",
            "shortname": "CG.Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/game/game.js",
            "line": 1,
            "description": "CG.Game - this class is the starting point for a cangaja game. The default object name of the instantiated object has to be 'Game'!\n\n\n```\n\nCG.Game.extend('MyGame', {\n   init: function (canvas, options) {\n       // call init from super class\n       this._super(canvas, options)\n       // add custom properties here or remove the init method\n   },\n   preload: function () {\n       // put preloading stuff here\n\n       // for example\n       this.asset.addFont('media/font/small.txt', 'small', 'small')\n           .addImage('media/img/player-anim.png', 'player-anim')\n           .addJson('media/map/map1.json', 'map1')\n           .startPreLoad()\n   },\n   create: function () {\n\n       // put your create stuff here\n\n       //after creation start game loop\n       this.loop()\n   },\n   update: function () {\n\n       // additional update code not handled with in cangaja\n\n   },\n   draw: function () {\n       // additional draw code not handled with in cangaja\n   }})\n\n// instantiate the Game class\nGame = new CG.MyGame(canvas)\n\n```",
            "extends": "Class"
        },
        "CG.Stick": {
            "name": "CG.Stick",
            "shortname": "CG.Stick",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/input/stick.js",
            "line": 1,
            "description": "CG.Stick displays an analog stick and uses the first element of the touches\n\n```\n\nvar b = new CG.Stick({\n      maxLength: 0,\n      active: false\n    })\n\n```",
            "extends": "CG.Class"
        },
        "CG.CanvasRenderer": {
            "name": "CG.CanvasRenderer",
            "shortname": "CG.CanvasRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/renderer/canvasrenderer.js",
            "line": 1,
            "description": "A CanvasRenderer with WebGL and Canvas 2D fallback would be really nice ;o)\nHow to implement all the different classes....?\n\nOr make it like Phaser and implement pixi.js?",
            "extends": "CG.Class"
        },
        "CG.SpineAnimation": {
            "name": "CG.SpineAnimation",
            "shortname": "CG.SpineAnimation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/spine/spine-animation.js",
            "line": 1,
            "description": "CG.SpineAnimation - this class is a little wrapper for spine animations (http://esotericsoftware.com). The implementation is not perfect at the moment\nand is on early stages. There is a lot of stuff that could be implemented: boundingbox collision, eventhandling, box2d support",
            "extends": "CG.Entity\n\n\nTODO\nBoundingbox collision see example here:\nhttps://github.com/EsotericSoftware/spine-runtimes/blob/master/spine-libgdx/test/com/esotericsoftware/spine/AnimationStateTest.java\n\n\nEventhandler see example here:\nhttps://github.com/EsotericSoftware/spine-runtimes/blob/master/spine-libgdx/test/com/esotericsoftware/spine/SkeletonTest.java\n\n\nBox2d support see example here:\nhttps://github.com/EsotericSoftware/spine-runtimes/blob/master/spine-libgdx/test/com/esotericsoftware/spine/Box2DExample.java\nhttp://www.esotericsoftware.com/forum/viewtopic.php?f=3&t=1394&p=6691&hilit=skeletonbounds#p6691"
        },
        "CG.Animation": {
            "name": "CG.Animation",
            "shortname": "CG.Animation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/animation.js",
            "line": 1,
            "description": "CG.Animation extends CG.Sprite and add support for animations ;o) It needs atlas files with fixed framesizes and with following animation frames.\nFor example you can use Timeline FX generated graphics.\n\n```\n\n    var s = new CG.Animation({\n          image: '../images/demo.png',\n          position: new CG.Point(200,200),\n          startFrame: 5,\n          endFrame: 6,\n          width: 10,\n          height: 20\n        })\n\n```",
            "extends": "CG.Sprite"
        },
        "CG.Button": {
            "name": "CG.Button",
            "shortname": "CG.Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/button.js",
            "line": 1,
            "description": "CG.Button represents a simple button class that can handle click,\nmouseover and callback functionality.\n\n```\n\nvar s = new CG.Button({\n  image: '../images/demo.png', // the image for the button\n  position: new CG.Point(200,200), // position of the button\n  text: 'MyButton',  // optional text\n  font: heiti,  // a font object when\n  callback: callbackFunction // a callback to execute when the button is clicked\n})\n\n```",
            "extends": "CG.Sprite"
        },
        "CG.Particle": {
            "name": "CG.Particle",
            "shortname": "CG.Particle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/particle.js",
            "line": 1,
            "description": "CG.Particle\n\n```\n\n    var s = new CG.Particle({\n          image: '../images/demo.png'\n        })\n\n```",
            "extends": "CG.Sprite"
        },
        "CG.Sprite": {
            "name": "CG.Sprite",
            "shortname": "CG.Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/sprite/sprite.js",
            "line": 1,
            "description": "CG.Sprite this is the basic object to get a image to the canvas.\nIt must be added to a layer where update/draw of every object is called automatically.\nOtherwise it can be used stand alone in the Game object itself in the\nupdate and draw methods.\n\n```\n\n// new sprite with image from filepath\nvar s = new CG.Sprite({\n  image: '../images/demo.png',\n  position: new CG.Point(200,200)\n})\n\n// new sprite with preloaded image from Game.asset\nvar s = new CG.Sprite({\n  image: Game.asset.getImageByName('player'),\n  position: new CG.Point(200,200)\n})\n\n\n```",
            "extends": "CG.Entity"
        },
        "CG.Font": {
            "name": "CG.Font",
            "shortname": "CG.Font",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/text/font.js",
            "line": 1,
            "description": "CG.Font supports loading and drawing font files (EZ GUI Text format) from Glyph Designer,\n(Hiero works also but need some modifications of the exported files)\n\n```\n\n//create font object\nsmall = new CG.Font().loadFont(Game.asset.getFontByName('small'))\n\n//draw text to canvas\nsmall.drawText('Foo bar!', xpos, ypos)\n\n```",
            "extends": "CG.Entity"
        },
        "CG.Text": {
            "name": "CG.Text",
            "shortname": "CG.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/text/text.js",
            "line": 1,
            "description": "Future plans:\nCG.Text => support for different text drawing modes like textblock, text alignment, text ticker or scroller.\n\n```\n\n    var t = new CG.Text({\n          font: abdi // the font object (CG.Font) to use\n        })\n\n```",
            "extends": "CG.Entity"
        },
        "CG.Map": {
            "name": "CG.Map",
            "shortname": "CG.Map",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/map.js",
            "line": 1,
            "description": "CG.Map supports loading and rendering maps from the editor Tiled.\nXML and JSON file types are supported.\nXML => supported tiled encodings are csv and xml (see settings!). base64, base64(gzip) and base64(zlib) are not supported!\n\nSupported types of the object layer are:\n- object/group (rectangle?)\n- tile element, reference point is bottom/left of the tile in the editor\n\nThese object layer types are used to generate Point and Bound objects and can be used to position sprites, what ever in the map.",
            "extends": "CG.Entity\n\nTODO spacing and margin ?\nTODO own buffer for drawing => split screen possible?\nTODO update & draw method 50%"
        },
        "CG.MapArea": {
            "name": "CG.MapArea",
            "shortname": "CG.MapArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maparea.js",
            "line": 1,
            "description": "CG.MapArea. Support now for name and the bound values.\n\n```\n\nvar ma = new CG.MapArea({\n   name: obj.name,\n   bound: new CG.Bound({\n       x: parseInt(obj.x),\n       y: parseInt(obj.y),\n       width: parseInt(obj.width),\n       height: parseInt(obj.height)\n   }),\n   mapOffset: this.position,\n   type: obj.properties.type\n})\n\n```",
            "extends": "CG.Class"
        },
        "CG.MapPoint": {
            "name": "CG.MapPoint",
            "shortname": "CG.MapPoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/mappoint.js",
            "line": 1,
            "description": "CG.MapPoint. Support now for name, gid and x/y-position values. No tilemap properties at the moment.\n\n```\n\nvar s = new CG.MapPoint({\n  name: '',                            // name of the tile\n  position: new CG.Point(200,200),     // position point\n  mapOffset: new CG.Point(100,100),    // mapoffset reference to the current map position\n  gid: 10                              // gid number of tilemap editor\n})\n\n```",
            "extends": "CG.Class"
        },
        "CG.MapTileLayer": {
            "name": "CG.MapTileLayer",
            "shortname": "CG.MapTileLayer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 1,
            "description": "CG.MapTileLayer",
            "extends": "Class"
        },
        "CG.MapTileProperties": {
            "name": "CG.MapTileProperties",
            "shortname": "CG.MapTileProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CG",
            "namespace": "",
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 1,
            "description": "CG.MapTileProperties",
            "extends": "Class"
        }
    },
    "classitems": [
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 23,
            "description": "Options:\nimage {string}\nxoffset {number}\nyoffset {number}\nwidth {number}\nheight {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 38,
            "itemtype": "property",
            "name": "source",
            "type": "{String}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 43,
            "itemtype": "property",
            "name": "atlasimage",
            "type": "{String}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 48,
            "itemtype": "property",
            "name": "atlasname",
            "type": "{String}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 53,
            "itemtype": "property",
            "name": "image",
            "type": "{*}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 59,
            "itemtype": "property",
            "name": "xoffset",
            "type": "{Number}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 64,
            "itemtype": "property",
            "name": "yoffset",
            "type": "{*}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 69,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 74,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 79,
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-image.js",
            "line": 88,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.AtlasImage"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 41,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 53,
            "itemtype": "property",
            "name": "imagename",
            "type": "{String}",
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 58,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 63,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 68,
            "itemtype": "property",
            "name": "atlasimages",
            "type": "{Array}",
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 75,
            "description": "load a xml file from TexturePacker",
            "itemtype": "method",
            "name": "loadXml",
            "params": [
                {
                    "name": "xmlfile",
                    "description": "path or mediaasset object with data of TexturePacker xml",
                    "type": "String/object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 117,
            "description": "load a json file from TexturePacker",
            "itemtype": "method",
            "name": "loadJson",
            "params": [
                {
                    "name": "jsonfile",
                    "description": "path or mediaasset object with data of TexturePacker json",
                    "type": "String/object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/atlas/atlas-texturepacker.js",
            "line": 158,
            "description": "get all TexturePacker images (Use array.push.apply(array, anotherarray) to append to Game.asset)",
            "itemtype": "method",
            "name": "getAtlasImages",
            "return": {
                "description": "returns all atlasimages of TexturePacker file to use with Game.asset",
                "type": "Array"
            },
            "class": "CG.AtlasTexturePacker"
        },
        {
            "file": "cangaja/base/base.js",
            "line": 66,
            "description": "Extends a destination object with a source object (modifies destination object)",
            "itemtype": "method",
            "name": "CG._extend",
            "params": [
                {
                    "name": "dest",
                    "description": "- destination object",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "- source object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns the dest object",
                "type": "Object"
            },
            "class": "Cangaja",
            "module": "CG"
        },
        {
            "file": "cangaja/base/base.js",
            "line": 83,
            "description": "Return a shallow copy of an object. Sub-objects (and sub-arrays) are not cloned. (uses extend internally)",
            "itemtype": "method",
            "name": "CG._clone",
            "params": [
                {
                    "name": "obj",
                    "description": "- object to clone",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "cloned object",
                "type": "Object"
            },
            "class": "Cangaja",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 24,
            "description": "Options:\nwidth {number}\nheight {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 38,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 42,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 46,
            "description": "tolerance for the getSquareValues method",
            "itemtype": "property",
            "name": "tolerance",
            "type": "Number",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 58,
            "itemtype": "property",
            "name": "bitmap_canvas",
            "type": "Object",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 62,
            "itemtype": "property",
            "name": "bitmap_ctx",
            "type": "Context",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 66,
            "itemtype": "property",
            "name": "bitmap_ctx.fillStyle",
            "type": "String",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 70,
            "itemtype": "property",
            "name": "bitmap_canvas.width",
            "type": "Number",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 74,
            "itemtype": "property",
            "name": "bitmap_canvas.height",
            "type": "Number",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 82,
            "description": "Loads an image and draws it to the buffer",
            "itemtype": "method",
            "name": "loadImage",
            "params": [
                {
                    "name": "imgpath,",
                    "description": "image object or atlasimage object to use",
                    "type": "String, image, atlasimage"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 108,
            "itemtype": "method",
            "name": "clearBuffer",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 116,
            "itemtype": "method",
            "name": "drawImageToBuffer",
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 127,
            "itemtype": "method",
            "name": "clearRect",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for clearRect",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for clearRect",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "the width for clearRect",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "the height for clearRect",
                    "type": "Number"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 142,
            "itemtype": "method",
            "name": "clearCircle",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for clearCircle",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for clearCircle",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "the radius for clearCircle",
                    "type": "Number"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 159,
            "itemtype": "method",
            "name": "getPixel",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for getPixel",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for getPixel",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "data from canvas",
                "type": "Imagedata"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 170,
            "itemtype": "method",
            "name": "getPixels",
            "params": [
                {
                    "name": "x",
                    "description": "the x position for getPixels",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position for getPixels",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "for getPixels",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "for getPixels",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "data from canvas",
                "type": "Imagedata"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 182,
            "itemtype": "method",
            "name": "getPixelAlpha",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 192,
            "itemtype": "method",
            "name": "traceContour",
            "description": "trace the outer contour of an bitmap body clockwise (CW)\nhttp://www.emanueleferonato.com/2013/03/01/using-marching-squares-algorithm-to-trace-the-contour-of-an-image/)",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 338,
            "itemtype": "method",
            "name": "drawContour",
            "description": "draws the traced contour for debuging at the moment",
            "params": [
                {
                    "name": "vertices",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 351,
            "itemtype": "method",
            "name": "lightenContour",
            "description": "removes points that doesn't affect much to the visual appearance. the order after ClipperLib.JS.Lighten is counter clockwise (CCW)",
            "params": [
                {
                    "name": "vertices",
                    "description": ""
                },
                {
                    "name": "tolerance",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 362,
            "itemtype": "method",
            "name": "triangulateContour",
            "params": [
                {
                    "name": "vertices",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "array.<Triangle>|*|Array"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 372,
            "itemtype": "method",
            "name": "getStartingPixel",
            "description": "scanline trace to get the first pixel",
            "return": {
                "description": "",
                "type": "Object|false"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bitmap.js",
            "line": 387,
            "itemtype": "method",
            "name": "getSquareValue",
            "description": "get four squared pixels to trace a contour",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "CG.Bitmap",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 22,
            "description": "Options:\nx {number}\ny {number}\nwidth {number}\nheight {number}",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 37,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 42,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 47,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 52,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/bound.js",
            "line": 65,
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "of the bounding box",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Bound",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "width",
                    "description": "width of the buffer",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "height of the buffer",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 20,
            "itemtype": "property",
            "name": "b_canvas",
            "type": "{HTMLElement}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 26,
            "itemtype": "property",
            "name": "b_canvas.width",
            "type": "{*}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 31,
            "itemtype": "property",
            "name": "b_canvas.height",
            "type": "{*}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/buffer.js",
            "line": 37,
            "itemtype": "property",
            "name": "b_ctx",
            "type": "{CanvasRenderingContext2D}",
            "class": "CG.Buffer",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: Apple\nDate: 23.07.13\nTime: 22:43\nTo change this template use File | Settings | File Templates.",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 12,
            "description": "millisecond value returned by Date.now(). Will always",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 17,
            "description": "the number of milliseconds between the epoch (January 1, 1970)",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 24,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 29,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 33,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 37,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 41,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 45,
            "description": "The tick() method updates ALL the Clock members, which should only\nbe read from and never written to manually. It is recommended that\ntick() is called from a callback loop using requestAnimationFrame\n\nLearn more: http://paulirish.com/2011/requestanimationframe-for-smart-animating/",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 53,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 57,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 60,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 65,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/clock.js",
            "line": 71,
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 13,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fps",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 19,
            "itemtype": "property",
            "name": "targetfps",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 24,
            "itemtype": "property",
            "name": "currenttime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 29,
            "itemtype": "property",
            "name": "lasttime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 34,
            "itemtype": "property",
            "name": "elapsedtime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 39,
            "itemtype": "property",
            "name": "frametime",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 44,
            "itemtype": "property",
            "name": "delta",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/delta.js",
            "line": 49,
            "itemtype": "property",
            "name": "fps",
            "type": "{Number}",
            "class": "CG.Delta",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 20,
            "description": "Options:\nname {string}\nposition {CG.Point}",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "the name of the Entity",
                    "type": "Object"
                }
            ],
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 34,
            "description": "visibility option",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 39,
            "description": "Transform object for matrix transformation",
            "itemtype": "property",
            "name": "transform",
            "type": "Transform",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 44,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 48,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 52,
            "itemtype": "property",
            "name": "dragable",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 56,
            "itemtype": "property",
            "name": "rotation",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 60,
            "itemtype": "property",
            "name": "xscale",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 64,
            "itemtype": "property",
            "name": "xhandle",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 68,
            "itemtype": "property",
            "name": "yscale",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 72,
            "itemtype": "property",
            "name": "yhandle",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 76,
            "itemtype": "property",
            "name": "clicked",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 80,
            "itemtype": "property",
            "name": "hover",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 84,
            "itemtype": "property",
            "name": "boundingradius",
            "type": "Number",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 88,
            "itemtype": "property",
            "name": "mapcollision",
            "type": "Boolean",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 113,
            "description": "initialize image for object. for now => sprite, particle, buffer, bitmap and button use it",
            "itemtype": "method",
            "name": "setImage",
            "params": [
                {
                    "name": "image",
                    "description": "image path, image or atlasimage",
                    "type": "Image"
                }
            ],
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 161,
            "description": "returns the bounds of rotated rectangle",
            "itemtype": "method",
            "name": "AABB",
            "return": {
                "description": "returns the calculated bounds",
                "type": "Object"
            },
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 179,
            "description": "checks click inside of the rectangle, supports rotation",
            "itemtype": "method",
            "name": "ifClicked",
            "return": {
                "description": "",
                "type": "True/false"
            },
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 206,
            "description": "checks if the mouse/pointer is over the rectangle",
            "itemtype": "method",
            "name": "ifMouseOver",
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/entity.js",
            "line": 229,
            "description": "checks if there is a collision of the given objects to this object http://devmag.org.za/2009/04/13/basic-collision-detection-in-2d-part-1/",
            "itemtype": "method",
            "name": "checkCollision",
            "params": [
                {
                    "name": "objects",
                    "description": "a array of objects to check for collision => Sprites, Animations, MapAreas",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "what to do after collision?",
                    "type": "Callback"
                }
            ],
            "class": "CG.Entity",
            "module": "CG"
        },
        {
            "file": "cangaja/base/intro.js",
            "line": 1,
            "description": "© 2013 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework\n\nhttps://www.github.com/samowitsch/cangaja/\n\nIncludes:\nhammer.js\nbuzz.js\nBox2Html5.js\nclipper.js\npoly2tri.js\nspine.js",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "the x value of the point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y value of the point",
                    "type": "Number"
                }
            ],
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 17,
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/point.js",
            "line": 21,
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "class": "CG.Point",
            "module": "CG"
        },
        {
            "file": "cangaja/base/vector.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y position",
                    "type": "Number"
                },
                {
                    "name": "z",
                    "description": "the z position",
                    "type": "Number"
                }
            ],
            "class": "CG.Vector",
            "module": "CG"
        },
        {
            "file": "cangaja/base/vector.js",
            "line": 19,
            "itemtype": "property",
            "name": "z",
            "type": "Number",
            "class": "CG.Vector",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 29,
            "description": "Options:\nname {string}\nimage {mixed}\nx {number}\ny (number}\nlength {number}\nsegments {number}\nsegmentHeight {number}\nworld {object}\nscale {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 49,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 54,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 59,
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 64,
            "itemtype": "property",
            "name": "segments",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 69,
            "itemtype": "property",
            "name": "segmentWidth",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 74,
            "itemtype": "property",
            "name": "segmentHeight",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 79,
            "itemtype": "property",
            "name": "anchor",
            "type": "{b2Vec2}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 84,
            "itemtype": "property",
            "name": "prevBodf",
            "type": "{Object}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 89,
            "itemtype": "property",
            "name": "bodyGroup",
            "type": "{Array}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 94,
            "itemtype": "property",
            "name": "bodyCount",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 99,
            "itemtype": "property",
            "name": "lowerAngle",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 104,
            "itemtype": "property",
            "name": "upperAngle",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 109,
            "itemtype": "property",
            "name": "enableLimit",
            "type": "{boolean}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-bridge.js",
            "line": 121,
            "itemtype": "property",
            "name": "segmentWidth",
            "type": "{Number}",
            "class": "CG.B2DBridge",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 24,
            "description": "Options:\nname {string}\npoints {array}\nx {number}\ny (number}\nworld {object}\nscale {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 45,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 50,
            "itemtype": "property",
            "name": "bodyType",
            "type": "{box2d.b2BodyType}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 60,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 65,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 69,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 74,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2CircleShape}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 81,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-chainshape.js",
            "line": 91,
            "description": "convertRealWorldPointToBox2DVec2 converts real world vectors to box2d world vecs depending on scale",
            "itemtype": "method",
            "name": "convertRealWorldPointToBox2DVec2",
            "params": [
                {
                    "name": "vertices",
                    "description": "CG.Point array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "vecs b2Vec2  with box2d world scale",
                "type": "Array"
            },
            "class": "CG.B2DChainShape",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 26,
            "description": "Options:\nname {string}\nimage {mixed}\nradius {number}\nx {number}\ny (number}\nworld {object}\nscale {number}\nbodyType {box2d.b2BodyType}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 45,
            "itemtype": "property",
            "name": "radius",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 56,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 62,
            "itemtype": "property",
            "name": "bodyDef.position.x",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 67,
            "itemtype": "property",
            "name": "bodyDef.position.y",
            "type": "{Number}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 72,
            "itemtype": "property",
            "name": "bdyDef.userData",
            "type": "{*}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 77,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2CircleShape}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-circle.js",
            "line": 83,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DCirlce",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 25,
            "description": "Options:\nname {string} id or name to identify\nimage {mixed} path to image, image or atlasimage from asset\nworld {object} reference to world of B2DWorld\nx {number} the x position\ny {number} the y position\nscale {number} the world scale of B2DWorld",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 45,
            "itemtype": "property",
            "name": "world",
            "type": "{}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 50,
            "itemtype": "property",
            "name": "scale",
            "type": "{}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 55,
            "itemtype": "property",
            "name": "body",
            "type": "{}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 60,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 65,
            "itemtype": "property",
            "name": "bullet",
            "type": "{b2Body}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 70,
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 75,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 80,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 85,
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 90,
            "itemtype": "property",
            "name": "id",
            "type": "{Object}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 95,
            "itemtype": "property",
            "name": "world",
            "type": "{b2World}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 100,
            "itemtype": "property",
            "name": "isHit",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 105,
            "itemtype": "property",
            "name": "strength",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 110,
            "itemtype": "property",
            "name": "dead",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 115,
            "itemtype": "property",
            "name": "angle",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 120,
            "itemtype": "property",
            "name": "density",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 125,
            "itemtype": "property",
            "name": "restitution",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 130,
            "itemtype": "property",
            "name": "friction",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 135,
            "itemtype": "property",
            "name": "allowSleep",
            "type": "{boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 140,
            "itemtype": "property",
            "name": "awake",
            "type": "{boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 145,
            "itemtype": "property",
            "name": "fixedRotation",
            "type": "{boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 150,
            "itemtype": "property",
            "name": "bodyDef",
            "type": "{b2BodyDef}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 155,
            "itemtype": "property",
            "name": "fixDef",
            "type": "{b2FixtureDef}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 167,
            "itemtype": "property",
            "name": "bodyDef.alowSleep",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 172,
            "itemtype": "property",
            "name": "bodyDef.awake",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 177,
            "itemtype": "property",
            "name": "bodyDef.bullet",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 182,
            "itemtype": "property",
            "name": "bodyDef.angle",
            "type": "{number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 187,
            "itemtype": "property",
            "name": "bodyDef.fixedRotation",
            "type": "{Boolean}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 192,
            "itemtype": "property",
            "name": "fixDef.density",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 197,
            "itemtype": "property",
            "name": "fixDef.friction",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 202,
            "itemtype": "property",
            "name": "fixDef.restitution",
            "type": "{Number}",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 210,
            "itemtype": "method",
            "name": "hit",
            "params": [
                {
                    "name": "impulse",
                    "description": ""
                },
                {
                    "name": "source",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 231,
            "itemtype": "method",
            "name": "addVelocity",
            "params": [
                {
                    "name": "b2Vec2",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 256,
            "itemtype": "method",
            "name": "applyImpulse",
            "params": [
                {
                    "name": "degrees",
                    "description": ""
                },
                {
                    "name": "power",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 268,
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "b2BodyType",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 275,
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "b2Vec2",
                    "description": ""
                }
            ],
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-entity.js",
            "line": 282,
            "itemtype": "method",
            "name": "getPosition",
            "class": "CG.B2DEntity",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 12,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "world",
                    "description": "",
                    "type": "CG.B2DWorld"
                },
                {
                    "name": "offsetx",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "offsety",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 21,
            "itemtype": "property",
            "name": "json",
            "type": "String",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 46,
            "itemtype": "property",
            "name": "world",
            "type": "CG.B2DWorld",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 50,
            "itemtype": "property",
            "name": "offsetx",
            "type": "Number",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 54,
            "itemtype": "property",
            "name": "offsety",
            "type": "Number",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 68,
            "description": "",
            "itemtype": "method",
            "name": "loadBodies",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 86,
            "description": "is this method needed? use MediaAsset loader instead or extend MediaAsset with in game \"preloading\"?",
            "itemtype": "method",
            "name": "loadImages",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-fizzx-loader.js",
            "line": 97,
            "description": "",
            "itemtype": "method",
            "name": "loadJoints",
            "class": "CG.B2DFizzXLoader",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 24,
            "description": "Options:\nname {string} id or name to identify\nstartPoint {CG.Point}\nendPoint {CG.Point}\nworld {object} reference to world of B2DWorld\nscale {number} the world scale of B2DWorld",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 40,
            "itemtype": "property",
            "name": "body",
            "type": "{}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 45,
            "itemtype": "property",
            "name": "startPoint",
            "type": "{b2Vec2}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 50,
            "itemtype": "property",
            "name": "endPoint",
            "type": "{b2Vec2}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 62,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2PolygonShape}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 68,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{Number}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 73,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 77,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-line.js",
            "line": 82,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DLine",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 31,
            "description": "Options:\nname {string}\nimage {mixed}\ntexturepacker {string}\nx {number}\ny (number}\nworld {object}\nscale {number}\nbodyType {box2d.b2BodyType}\nbullet {boolean}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 51,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 56,
            "itemtype": "property",
            "name": "bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 67,
            "itemtype": "property",
            "name": "jsondata",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 73,
            "itemtype": "property",
            "name": "vecs",
            "type": "{Array}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 81,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 87,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 91,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 96,
            "itemtype": "property",
            "name": "bodyDef.bullet",
            "type": "{*}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 102,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 123,
            "description": "extract the polygons out of the PhysicsEditor json file and collect them into an array\n\nPhysicseditor json example",
            "example": [
                "\n    {\n\n        \"ballon\": [\n\n                {\n                    \"density\": 0.05, \"friction\": 0.5, \"bounce\": 0,\n                    \"filter\": { \"categoryBits\": 1, \"maskBits\": 65535 },\n                    \"shape\": [   98.5, 210  ,  98.5, 212  ,  92, 215.5  ,  82.5, 205  ,  91.5, 206  ,  97, 207.5  ]\n                }  ,\n                {\n                    \"density\": 0.05, \"friction\": 0.5, \"bounce\": 0,\n                    \"filter\": { \"categoryBits\": 1, \"maskBits\": 65535 },\n                    \"shape\": [   81.5, 213  ,  82.5, 205  ,  92, 215.5  ,  83, 215.5  ]\n                }  ,"
            ],
            "itemtype": "method",
            "name": "getPolysFromJson",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 159,
            "description": "use the CG.Bitmap traceContour method to get the shape of an bitmap. The result are 'only' triangulated polygons. Better results with concave polygons are calculated with Physicseditor, see getPolysFromJson.",
            "todo": [
                "final implemenation"
            ],
            "example": [
                "\n    // example code from demo-bitmap-contour.js\n    bitmap = new CG.Bitmap(Game.width, Game.height)\n    bitmap.loadImage(Game.asset.getImageByName('star-contour-test'))\n    var contour = bitmap.traceContour()\n    var lightedContour = bitmap.lightenCountur(contour)\n    var triangulatedContour = bitmap.triangulateContour(lightedContour)"
            ],
            "itemtype": "method",
            "name": "getPolysFromBitmapTrace",
            "params": [
                {
                    "name": "image",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-polygon.js",
            "line": 179,
            "description": "The origin of the vertices from physicseditor is top/left. This method makes the vecs centroid (centered origin) depending on image size.",
            "todo": [
                "put this stuff into getPolysFromJson?"
            ],
            "itemtype": "method",
            "name": "makeVecsCentroid",
            "params": [
                {
                    "name": "vecs",
                    "description": ""
                }
            ],
            "class": "CG.B2DPolygon",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 25,
            "description": "Options:\nname {string}\nimage {mixed}\nx {number}\ny (number}\nworld {object}\nscale {number}\nbodyType {box2d.b2BodyType}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 46,
            "itemtype": "property",
            "name": "fixDef.shape",
            "type": "{b2PolygonShape}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 53,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 59,
            "itemtype": "property",
            "name": "bodyDef.position.x",
            "type": "{Number}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 64,
            "itemtype": "property",
            "name": "bodyDef.position.y",
            "type": "{Number}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 69,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rectangle.js",
            "line": 74,
            "itemtype": "property",
            "name": "body",
            "type": "{b2Body}",
            "class": "CG.B2DRectangle",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 28,
            "description": "Options:\nname {string}\nimage {mixed}\nx {number}\ny (number}\nlength {number}\nsegments {number}\nsegmentHeight {number}\nworld {object}\nscale {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 48,
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 53,
            "itemtype": "property",
            "name": "segments",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 58,
            "itemtype": "property",
            "name": "segmentHeight",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 63,
            "itemtype": "property",
            "name": "segmentWidth",
            "type": "{*}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 68,
            "itemtype": "property",
            "name": "anchor",
            "type": "{b2Vec2}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 73,
            "itemtype": "property",
            "name": "prevBody",
            "type": "{Object}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 78,
            "itemtype": "property",
            "name": "bodyGroup",
            "type": "{Array}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 83,
            "itemtype": "property",
            "name": "bodyCount",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 88,
            "itemtype": "property",
            "name": "lowerAngle",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 93,
            "itemtype": "property",
            "name": "upperAngle",
            "type": "{Number}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-rope.js",
            "line": 98,
            "itemtype": "property",
            "name": "enableLimit",
            "type": "{boolean}",
            "class": "CG.B2DRope",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 55,
            "description": "Options:\nname {string}\nimage {mixed}\npoints {array}\nx {number}\ny {number}\nworld {object}\nscale {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 75,
            "description": "bitmap for terrain",
            "itemtype": "property",
            "name": "bitmap",
            "type": "{CG.Bitmap}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 81,
            "itemtype": "property",
            "name": "image",
            "type": "{strng}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 86,
            "itemtype": "property",
            "name": "polys",
            "type": "{Array}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 91,
            "itemtype": "property",
            "name": "terrainShape",
            "type": "{*}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 96,
            "description": "the generated triangles generated thru clipper and poly2tri",
            "itemtype": "property",
            "name": "terrainTriangles",
            "type": "{Array}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 102,
            "itemtype": "property",
            "name": "holes",
            "type": "{Array}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 117,
            "itemtype": "property",
            "name": "bodyDef.type",
            "type": "{box2d.b2BodyType.b2_staticBody/box2d.b2BodyType.b2_dynamicBody/box2d.b2BodyType.b2_kinematicBody/box2d.b2BodyType.b2_bulletBody}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 122,
            "itemtype": "property",
            "name": "bodyDef.position",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 126,
            "itemtype": "property",
            "name": "bodyDef.userData",
            "type": "{*}",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 137,
            "itemtype": "method",
            "name": "createTerrain",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 183,
            "description": "deletes the terrain",
            "itemtype": "method",
            "name": "deleteTerrain",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 193,
            "description": "Using Clipper to clip a hole in a given polygonshape. Important: the outer polygon points have to be in CW orientation, the hole polygons must ordered in CCW\n\nOptions:\npoints - points for clipping,\nradius - radius for clipping,\nx - x pos for clipping,\ny - y pos for clipping",
            "itemtype": "method",
            "name": "clipTerrain",
            "params": [
                {
                    "name": "opt",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 260,
            "description": "this method uses the Clipper Lighten method to reduce vertices for better triangulation",
            "itemtype": "method",
            "name": "lightenTerrain",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 279,
            "description": "Experimental not working yet. Try to use the Clipperlib Clean method",
            "itemtype": "method",
            "name": "cleanTerrain",
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 298,
            "description": "extract the triangles out of poly2tri array",
            "itemtype": "method",
            "name": "getPolysFromJson",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-terrain.js",
            "line": 312,
            "description": "creates a ccw wise circle vertices array for clipping\n\nOptions:\npoints - number of points of circle,\nradius - radius for circle,\nx - x position for circle,\ny - y position for circle",
            "itemtype": "method",
            "name": "createCircle",
            "params": [
                {
                    "name": "opts",
                    "description": "example {points: 16, radius: 30, x: 320, y: 240}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "CG.B2DTerrain",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 26,
            "description": "Options:\nname {string}\nsleep {boolean}\nscale {number}\ndebug {boolean}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 40,
            "itemtype": "property",
            "name": "framerate",
            "type": "{number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 46,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 51,
            "itemtype": "property",
            "name": "debug",
            "type": "{Boolean}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 56,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 61,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 66,
            "itemtype": "property",
            "name": "elements",
            "type": "{Array}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 72,
            "itemtype": "property",
            "name": "uid",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 77,
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 82,
            "itemtype": "property",
            "name": "sleep",
            "type": "{Boolean}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 93,
            "itemtype": "property",
            "name": "world",
            "type": "{b2World}",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 115,
            "itemtype": "method",
            "name": "update",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 138,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 156,
            "description": "Custom extended objects can be added to the B2DWorld with this method.",
            "itemtype": "method",
            "name": "addCustom",
            "params": [
                {
                    "name": "obj",
                    "description": "object    custom B2D object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 171,
            "description": "Checks if a B2D body Exists",
            "itemtype": "method",
            "name": "deleteBodyAt",
            "params": [
                {
                    "name": "body",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 191,
            "description": "createBox creates a basic Box2D rectangle with some default settings.",
            "example": [
                "\n    b2world.createBox({\n       name: 'glowball',\n       image: this.asset.getImageByName('glowball'),\n       radius: 22,\n       x: this.mouse.x,\n       y: this.mouse.y,\n       bodyType: box2d.b2BodyType.b2_dynamicBody\n    })"
            ],
            "itemtype": "method",
            "name": "createBox",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DRectangle"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 225,
            "description": "createLine creates a basic Box2D line with some default settings.",
            "example": [
                "\n    b2world.createLine({\n       name:'testline2',\n       startPoint: new CG.Point(630, 200),\n       endPoint: new CG.Point(150, 250)\n    })"
            ],
            "itemtype": "method",
            "name": "createLine",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DLine"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 255,
            "description": "createCircle creates a basic Box2D circle with some default settings",
            "example": [
                "\n    b2world.createCircle({\n       name: 'glowball',\n       image: this.asset.getImageByName('glowball'),\n       radius: 22,\n       x: this.mouse.x,\n       y: this.mouse.y,\n       bodyType: box2d.b2BodyType.b2_dynamicBody\n    })"
            ],
            "itemtype": "method",
            "name": "createCircle",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DCircle"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 290,
            "description": "createPolyBody creates a Box2D polybody. A PhysicsEditor json (Lime + Corona JSON Exporter) file is needed for this\nBox2D object. The polygonshape and some settings like density, bounce and friction are\ntaken from the json file at the moment.",
            "example": [
                "\n    b2world.createPolyBody({\n       name: 'powerstar75',\n       image: this.asset.getImageByName('powerstar75'),\n       texturepacker: this.asset.getJsonByName('powerstar75'),\n       x: 200,\n       y: -150,\n       bodyType: box2d.b2BodyType.b2_dynamicBody,\n       bullet: false\n    })"
            ],
            "itemtype": "method",
            "name": "createPolyBody",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DPolygon"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 330,
            "description": "createTerrain",
            "example": [
                "\n    var terrainPolys =\n    [{\n       \touter: [{\n       \t\tx: 0,\n       \t\ty: 100.5\n       \t}, {\n       \t\tx: 1024,\n       \t\ty: 100.5\n       \t}, {\n       \t\tx: 1024,\n       \t\ty: 768\n       \t}, {\n       \t\tx: 0,\n       \t\ty: 768\n       \t}],\n       \tholes: []\n       }]\n\n    b2world.createTerrain({\n        name: 'terrain',\n        image: false\n        terrainShape: terrainPolys,\n        x:0,\n        y:0\n    })"
            ],
            "itemtype": "method",
            "name": "createPolyBody",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DTerrain"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 383,
            "description": "createChainShape",
            "example": [
                "\n    chainArray = [\n        new CG.Point(0, 0),\n        new CG.Point(50, 10),\n        new CG.Point(100, 100),\n        new CG.Point(200, 100),\n        new CG.Point(250, 50),\n        new CG.Point(300, 70)\n    ]\n\n    b2world.createChainShape({\n        name: 'chaneshape',\n        points: chainArray,\n        x: 0,\n        y: 200\n    })"
            ],
            "itemtype": "method",
            "name": "createChainShape",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DChainShape"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 424,
            "description": "This method creates a B2D bridge. Just play with the params to get a good result!",
            "example": [
                "\n    b2world.createBridge({\n       name:'chain',\n       image:this.asset.getImageByName('chain'),\n       x: 20,\n       y: 280,\n       length: 620,\n       segments: 27,\n       segmentHeight: 3\n    })"
            ],
            "itemtype": "method",
            "name": "createBridge",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DBridge"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 463,
            "description": "This method creates a B2D rope. Just play with the params to get a good result!",
            "example": [
                "\n    b2world.createRope({\n       name: 'chain-v',\n       image: this.asset.getImageByName('chain-v'),\n       x: 580,\n       y: 0,\n       length: 200,\n       segments: 8,\n       segmentWidth: 3\n   })"
            ],
            "itemtype": "method",
            "name": "createRope",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "CG.B2DRope"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 502,
            "description": "Enables dragging B2D objects with the mouse.",
            "itemtype": "method",
            "name": "mouseDownAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 529,
            "itemtype": "method",
            "name": "mouseUp",
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 536,
            "description": "Get a B2D body at the give x, y position.",
            "itemtype": "method",
            "name": "getBodyAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 569,
            "description": "Deletes a B2D body at the given x, y position",
            "itemtype": "method",
            "name": "deleteBodyAt",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "(Number)"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 593,
            "itemtype": "method",
            "name": "isMouseDown",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 600,
            "itemtype": "method",
            "name": "removeElementByIndex",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 607,
            "itemtype": "method",
            "name": "removeElementByUid",
            "params": [
                {
                    "name": "uid",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 620,
            "itemtype": "method",
            "name": "applyImpulse",
            "params": [
                {
                    "name": "body",
                    "description": ""
                },
                {
                    "name": "degrees",
                    "description": ""
                },
                {
                    "name": "power",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 633,
            "itemtype": "method",
            "name": "addContactListener",
            "params": [
                {
                    "name": "callbacks",
                    "description": ""
                }
            ],
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/box2d/b2d-world.js",
            "line": 657,
            "itemtype": "method",
            "name": "getBodySpec",
            "params": [
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CG.B2DWorld",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 34,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 41,
            "itemtype": "property",
            "name": "screens",
            "type": "{Array}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 46,
            "itemtype": "property",
            "name": "activescreen",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 51,
            "itemtype": "property",
            "name": "nextscreen",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 56,
            "itemtype": "property",
            "name": "duration",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 61,
            "itemtype": "property",
            "name": "stepx",
            "type": "{number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 66,
            "itemtype": "property",
            "name": "stepy",
            "type": "{number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 71,
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 76,
            "itemtype": "property",
            "name": "mode",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 81,
            "itemtype": "property",
            "name": "direction",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 86,
            "itemtype": "property",
            "name": "color",
            "type": "{String}",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 94,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 180,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 203,
            "itemtype": "method",
            "name": "nextScreen",
            "example": [
                "\n    //tell the director class to fade to next screen with scale mode\n    Game.director.nextScreen('gamescreen', 'scale', 10);\n\n    //tell the director class to fade to next screen\n    Game.director.nextScreen('settingsscreen', 'fade', 10);"
            ],
            "params": [
                {
                    "name": "screenname",
                    "description": "to define nextscreen for fading",
                    "type": "String"
                },
                {
                    "name": "mode",
                    "description": "mode for transition",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "the duration for fading",
                    "type": "Number"
                }
            ],
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 256,
            "itemtype": "method",
            "name": "addScreen",
            "params": [
                {
                    "name": "screen",
                    "description": "to add to the screen list",
                    "type": "CG.Screen"
                }
            ],
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 265,
            "itemtype": "method",
            "name": "getScreenByName",
            "params": [
                {
                    "name": "screenname",
                    "description": "to find screen by name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or the screen object",
                "type": "false/CG.Screen"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 280,
            "itemtype": "method",
            "name": "getIndexOfScreen",
            "params": [
                {
                    "name": "screenname",
                    "description": "to find index of screen in screen array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "return false or index number of the screen",
                "type": "False/Number"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/director.js",
            "line": 295,
            "itemtype": "method",
            "name": "getActiveScreenName",
            "return": {
                "description": "the name of the active screen",
                "type": "String"
            },
            "class": "CG.Director",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 20,
            "itemtype": "method",
            "name": "init!~YUIDOC_LINE~!!~YUIDOC_LINE~!Options:!~YUIDOC_LINE~!position",
            "type": "CG.Point",
            "is_constructor": 1,
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "CG.Point"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 34,
            "itemtype": "property",
            "name": "particle",
            "type": "{Array}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 39,
            "itemtype": "property",
            "name": "maxparticles",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 44,
            "itemtype": "property",
            "name": "creationtime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 49,
            "itemtype": "property",
            "name": "currenttime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 54,
            "itemtype": "property",
            "name": "creationspeed",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 59,
            "itemtype": "property",
            "name": "gravity",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 64,
            "itemtype": "property",
            "name": "image",
            "type": "{null}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 69,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 74,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 80,
            "itemtype": "property",
            "name": "rotation",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 85,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 90,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 95,
            "itemtype": "property",
            "name": "radius",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 100,
            "itemtype": "property",
            "name": "pspeed",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 105,
            "itemtype": "property",
            "name": "protation",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 110,
            "itemtype": "property",
            "name": "pdirection",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 115,
            "itemtype": "property",
            "name": "plifetime",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 120,
            "itemtype": "property",
            "name": "paging",
            "type": "{Number}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 125,
            "itemtype": "property",
            "name": "pfadeout",
            "type": "{Boolean}",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 144,
            "itemtype": "method",
            "name": "initAsPoint",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or atlasimage to use for the particle",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 156,
            "itemtype": "method",
            "name": "initAsExplosion",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or atlasimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "min",
                    "description": "value for particle speed",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "value for particle speed",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 171,
            "itemtype": "method",
            "name": "initAsCorona",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or atlasimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "radius",
                    "description": "of the corona emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 184,
            "itemtype": "method",
            "name": "initAsLine",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or atlasimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "width",
                    "description": "of the plate emitter",
                    "type": "Number"
                },
                {
                    "name": "direction",
                    "description": "(defined constants) of the plate emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 199,
            "itemtype": "method",
            "name": "initAsRectangle",
            "params": [
                {
                    "name": "image",
                    "description": "path, image or atlasimage to use for the particle",
                    "type": "Mixed"
                },
                {
                    "name": "width",
                    "description": "of the plate emitter",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "(defined constants) of the plate emitter",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 213,
            "itemtype": "method",
            "name": "createParticle",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 222,
            "itemtype": "method",
            "name": "initParticle",
            "params": [
                {
                    "name": "particle",
                    "description": "particle object",
                    "type": "Particle"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 311,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 341,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 352,
            "description": "Each emitter has its own particle pool to prevent object deletion/creation. This method searches an inactive/invisible particle",
            "itemtype": "method",
            "name": "searchInvisibleParticle",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 365,
            "itemtype": "method",
            "name": "setEmitterPosition",
            "params": [
                {
                    "name": "position",
                    "description": "of the emitter",
                    "type": "CG.Point"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 375,
            "itemtype": "method",
            "name": "setName",
            "params": [
                {
                    "name": "name",
                    "description": "of the object for search with layerobject.getElementByName(name)",
                    "type": "String"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 385,
            "itemtype": "method",
            "name": "setCreationTime",
            "params": [
                {
                    "name": "creationtime",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 394,
            "itemtype": "method",
            "name": "setMaxParticles",
            "params": [
                {
                    "name": "maxparticle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 403,
            "itemtype": "method",
            "name": "setGravity",
            "params": [
                {
                    "name": "gravity",
                    "description": "for all emitter controlled particles",
                    "type": "Float"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 413,
            "itemtype": "method",
            "name": "setParticleSpeed",
            "params": [
                {
                    "name": "speed",
                    "description": "set the speed of the particles",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 423,
            "itemtype": "method",
            "name": "setProtation",
            "params": [
                {
                    "name": "rotation",
                    "description": "set the rotation of the particles",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 433,
            "itemtype": "method",
            "name": "setPLifetime",
            "params": [
                {
                    "name": "plifetime",
                    "description": "set the lifetime of the particles",
                    "type": "Number"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 443,
            "itemtype": "method",
            "name": "activateFadeout",
            "description": "Activate fadeout of the particles depending on lifetime",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 452,
            "itemtype": "method",
            "name": "deactivateFadeout",
            "description": "Deactivate fadeout of the particles depending on lifetime",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 461,
            "itemtype": "method",
            "name": "getRandom",
            "params": [
                {
                    "name": "min",
                    "description": "value for random number",
                    "type": "Mixed"
                },
                {
                    "name": "max",
                    "description": "value for random number",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 471,
            "itemtype": "method",
            "name": "getX",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/emitter.js",
            "line": 478,
            "itemtype": "method",
            "name": "getY",
            "class": "CG.Emitter",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 18,
            "description": "Options:\nname {string}",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 29,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 34,
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 39,
            "itemtype": "property",
            "name": "fixedPosition",
            "type": "{Boolean}",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 44,
            "itemtype": "property",
            "name": "elements",
            "type": "{Array}",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 49,
            "itemtype": "property",
            "name": "elementsToDelete",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 63,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 80,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 104,
            "description": "Add new element to the layer. This could be a CG.Sprite, CG.Animation, CG.Button and so on. Every thing that has a update and draw method ;o)",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "element",
                    "description": "to add to elements array",
                    "type": "Obj"
                }
            ],
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 114,
            "description": "Find element by name (the first one)",
            "itemtype": "method",
            "name": "getElementByName",
            "params": [
                {
                    "name": "elementname",
                    "description": "name of element to find in element array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or the searched object",
                "type": "False/object"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/layer.js",
            "line": 129,
            "description": "Find elements by name (if they have the same name ;o)",
            "itemtype": "method",
            "name": "getElementsByName",
            "params": [
                {
                    "name": "elementname",
                    "description": "name of element to find in element array",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns a array of objects",
                "type": "Array"
            },
            "class": "CG.Layer",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 14,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "obj",
                    "description": "the game object CG.Game",
                    "type": "Object"
                }
            ],
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 20,
            "itemtype": "property",
            "name": "obj",
            "type": "{CG.Game}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 25,
            "itemtype": "property",
            "name": "ready",
            "type": "{CG.Game}",
            "access": "protected",
            "tagname": "",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 31,
            "itemtype": "property",
            "name": "progress",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 37,
            "itemtype": "property",
            "name": "images",
            "type": "{Array}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 44,
            "itemtype": "property",
            "name": "xmls",
            "type": "{Array}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 51,
            "itemtype": "property",
            "name": "jsons",
            "type": "{Array}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 58,
            "itemtype": "property",
            "name": "texts",
            "type": "{Array}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 65,
            "itemtype": "property",
            "name": "fonts",
            "type": "{Array}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 76,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 81,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 86,
            "itemtype": "property",
            "name": "radius",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 92,
            "itemtype": "property",
            "name": "linewidth",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 97,
            "itemtype": "property",
            "name": "bordercolor",
            "type": "{String}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 102,
            "itemtype": "property",
            "name": "progresscolor",
            "type": "{String}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 107,
            "itemtype": "property",
            "name": "shadowcolor",
            "type": "{String}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 112,
            "itemtype": "property",
            "name": "shadowblur",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 117,
            "itemtype": "property",
            "name": "shadowoffsetx",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 122,
            "itemtype": "property",
            "name": "shadowoffsety",
            "type": "{Number}",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 130,
            "itemtype": "method",
            "name": "addImage",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 146,
            "itemtype": "method",
            "name": "addFont",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 162,
            "itemtype": "method",
            "name": "addXml",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 178,
            "itemtype": "method",
            "name": "addJson",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 195,
            "itemtype": "method",
            "name": "addText",
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 211,
            "itemtype": "method",
            "name": "getImageByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 228,
            "itemtype": "method",
            "name": "getImagesByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 249,
            "itemtype": "method",
            "name": "getFontByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 262,
            "itemtype": "method",
            "name": "getXmlByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 275,
            "itemtype": "method",
            "name": "getJsonByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 288,
            "itemtype": "method",
            "name": "getTextByName",
            "params": [
                {
                    "name": "name",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 301,
            "itemtype": "method",
            "name": "startPreLoad",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/mediaasset.js",
            "line": 353,
            "itemtype": "method",
            "name": "progressScreen",
            "description": "render a progress screen to the canvas",
            "class": "CG.MediaAsset",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 54,
            "description": "Options:\nx {number}\ny {number}\nmargin {number}*",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 67,
            "itemtype": "property",
            "name": "x",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 72,
            "itemtype": "property",
            "name": "y",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 77,
            "itemtype": "property",
            "name": "margin",
            "type": "{Number}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 82,
            "itemtype": "property",
            "name": "step",
            "type": "{*}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 87,
            "itemtype": "property",
            "name": "buttons",
            "type": "{Array}",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 100,
            "description": "adds an CG.Button to the buttons array",
            "itemtype": "method",
            "name": "addButton",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Button"
                }
            ],
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 110,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/menu.js",
            "line": 118,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Menu",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 20,
            "description": "Options:\nmode {string}\nmin {number}\nmax {number}\nspeed {number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 33,
            "itemtype": "property",
            "name": "mode",
            "type": "{String}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 38,
            "itemtype": "property",
            "name": "min",
            "type": "{Number}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 43,
            "itemtype": "property",
            "name": "max",
            "type": "{Number}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 48,
            "itemtype": "property",
            "name": "speed",
            "type": "{Number}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 53,
            "itemtype": "property",
            "name": "angle",
            "type": "{Number}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 58,
            "itemtype": "property",
            "name": "rad",
            "type": "{Number}",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 63,
            "itemtype": "property",
            "name": "_val",
            "type": "{Number}",
            "access": "protected",
            "tagname": "",
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/morph.js",
            "line": 98,
            "itemtype": "method",
            "name": "getVal",
            "return": {
                "description": "",
                "type": "Float"
            },
            "class": "CG.Morph",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 20,
            "description": "Options:\nname {string}",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 31,
            "itemtype": "property",
            "name": "name",
            "type": "{string}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 36,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 41,
            "itemtype": "property",
            "name": "xscale",
            "type": "{Number}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 46,
            "itemtype": "property",
            "name": "yscale",
            "type": "{Number}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 51,
            "itemtype": "property",
            "name": "layers",
            "type": "{Array}",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 67,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 75,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 103,
            "description": "add a CG.Layer object to the layer array",
            "itemtype": "method",
            "name": "addLayer",
            "params": [
                {
                    "name": "layer",
                    "description": "to add",
                    "type": "Layer"
                }
            ],
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/screen.js",
            "line": 113,
            "description": "find CG.Layer by name",
            "itemtype": "method",
            "name": "getLayerByName",
            "params": [
                {
                    "name": "layername",
                    "description": "find layer by name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean/layer"
            },
            "class": "CG.Screen",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 46,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 54,
            "itemtype": "property",
            "name": "current",
            "type": "{Number}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 59,
            "itemtype": "property",
            "name": "loop",
            "type": "{Boolean}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 64,
            "itemtype": "property",
            "name": "translations",
            "type": "{Array}",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 77,
            "description": "add a translation object to the sequence array",
            "itemtype": "method",
            "name": "addTranslation",
            "params": [
                {
                    "name": "translationObj",
                    "description": "the translation object to add",
                    "type": "Translation"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 87,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 105,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/sequence.js",
            "line": 111,
            "itemtype": "method",
            "name": "reset",
            "class": "CG.Sequence",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 11,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 18,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 23,
            "itemtype": "property",
            "name": "tx",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 28,
            "itemtype": "property",
            "name": "ty",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 33,
            "itemtype": "property",
            "name": "x1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 38,
            "itemtype": "property",
            "name": "y1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 43,
            "itemtype": "property",
            "name": "x2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 48,
            "itemtype": "property",
            "name": "y2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 53,
            "itemtype": "property",
            "name": "bx",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 58,
            "itemtype": "property",
            "name": "by",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 63,
            "itemtype": "property",
            "name": "object",
            "type": "{Object}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 68,
            "itemtype": "property",
            "name": "r1",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 73,
            "itemtype": "property",
            "name": "r2",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 78,
            "itemtype": "property",
            "name": "startangle",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 83,
            "itemtype": "property",
            "name": "angle",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 88,
            "itemtype": "property",
            "name": "speed",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 93,
            "itemtype": "property",
            "name": "steps",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 98,
            "itemtype": "property",
            "name": "step",
            "type": "{Number}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 103,
            "itemtype": "property",
            "name": "positions",
            "type": "{Array}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 108,
            "itemtype": "property",
            "name": "finished",
            "type": "{Boolean}",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 122,
            "description": "Options:\nobject {object}\nsteps {number}\nstartpoint {CG.Point}\nendpoint {CG.Point}",
            "itemtype": "method",
            "name": "initTween",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 160,
            "description": "Options:\nobject {object}\ncenterpoint {CG.Point}\nradius1 {number}\nradius {number}\nstartangle {number}\nrotation {number}",
            "example": [
                "\n    var t = new CG.Translate()\n    t.initOval({\n       object: spr1,\n       centerPoint: new CG.Point(320, 160),\n       radius1: 50,\n       radius2: 50,\n       startangle: 90,\n       rotation: 5\n    })"
            ],
            "itemtype": "method",
            "name": "initOval",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 200,
            "description": "initBezier\nhttp://13thparallel.com/archive/bezier-curves/",
            "example": [
                "\n    var t = new CG.Translate()\n    t.initBezier({\n       object: spr1,\n       steps: 10,\n       startPoint: new CG.Point(320, 160),\n       endPoint: new CG.Point(0, 10),\n       control1: new CG.Point(340, 180),\n       control2: new CG.Point(0, 0)\n    })"
            ],
            "itemtype": "method",
            "name": "initBezier",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "This"
            },
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 268,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 301,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/control/translate.js",
            "line": 306,
            "itemtype": "method",
            "name": "reset",
            "class": "CG.Translate",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 50,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": ""
                },
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 57,
            "itemtype": "property",
            "name": "canvas",
            "type": "Object",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 71,
            "itemtype": "property",
            "name": "ctx",
            "type": "Object",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 75,
            "itemtype": "property",
            "name": "fps",
            "type": "Number",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 79,
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 83,
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 87,
            "itemtype": "property",
            "name": "width2",
            "type": "Number",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 91,
            "itemtype": "property",
            "name": "height2",
            "type": "Number",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 95,
            "itemtype": "property",
            "name": "b_canvas",
            "type": "Object",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 101,
            "itemtype": "property",
            "name": "b_ctx",
            "type": "Object",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 105,
            "itemtype": "property",
            "name": "asset",
            "type": "CG.MediaAsset",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 109,
            "itemtype": "property",
            "name": "director",
            "type": "CG.Director",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 113,
            "itemtype": "property",
            "name": "renderer",
            "type": "CG.CanvasRenderer",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 117,
            "itemtype": "property",
            "name": "delta",
            "type": "CG.Delta",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 121,
            "itemtype": "property",
            "name": "bound",
            "type": "CG.Bound",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 133,
            "description": "child classes that extends CG.Game defines here all needed stuff to preload with CG.MediaAsset.",
            "itemtype": "method",
            "name": "preload",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 139,
            "description": "child classes that extends CG.Game could use this method to create all needed stuff.",
            "itemtype": "method",
            "name": "create",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 146,
            "description": "this is the central (game) loop",
            "itemtype": "method",
            "name": "loop",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 158,
            "description": "in this method all CG.Director elements are updated.",
            "itemtype": "method",
            "name": "beforeUpdate",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 165,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 170,
            "description": "in this method all CG.Director elements are rendered to the canvas. after that the draw method is executed and some custom drawing is possible.",
            "itemtype": "method",
            "name": "beforeDraw",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 177,
            "description": "",
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/game/game.js",
            "line": 184,
            "description": "this is the final draw method. it draws the b_canvas buffer to the canvas",
            "itemtype": "method",
            "name": "afterDraw",
            "class": "CG.Game",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 20,
            "description": "Options:\nx {number}\ny {number}",
            "example": [
                ""
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 34,
            "itemtype": "property",
            "name": "active",
            "type": "{Boolean}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 39,
            "itemtype": "property",
            "name": "identifier",
            "type": "{Number}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 44,
            "itemtype": "property",
            "name": "handle",
            "type": "{Number}",
            "default": "CG.LEFT_HAND",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 50,
            "itemtype": "property",
            "name": "atLimit",
            "type": "{Boolean}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 55,
            "itemtype": "property",
            "name": "length",
            "type": "{Number}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 60,
            "itemtype": "property",
            "name": "maxLength",
            "type": "{Number}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 65,
            "itemtype": "property",
            "name": "limit",
            "type": "{Object}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 70,
            "itemtype": "property",
            "name": "input",
            "type": "{Object}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/input/stick.js",
            "line": 75,
            "itemtype": "property",
            "name": "normal",
            "type": "{Object}",
            "class": "CG.Stick",
            "module": "CG"
        },
        {
            "file": "cangaja/renderer/canvasrenderer.js",
            "line": 15,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/renderer/canvasrenderer.js",
            "line": 30,
            "description": "central draw method for all objects that draws to the canvas",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "renderObject",
                    "description": "the object to render",
                    "type": "Object"
                }
            ],
            "class": "CG.CanvasRenderer",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 25,
            "description": "Options:\nspinejson {string} Spine json animation file\nspineatlas {string} Spine atlas file (libGDX)\nposition {CG.Point}\nscale {number}\ncallback {function}",
            "example": [
                "\n    var sa = new CG.SpineAnimation({\n          spinejson: this.asset.getJsonByName('spinosaurus-json'),\n          spineatlas: this.asset.getTextByName('spinosaurus-atlas'),\n          position: new CG.Point(10,10),\n          scale: 1,\n          callback: function (spineObject) {\n//              spineObject.skeleton.setSkinByName(\"goblingirl\");\n               spineObject.skeleton.setSlotsToSetupPose();\n               spineObject.state.setAnimationByName(0, \"animation\", true);\n           }\n        })"
            ],
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 61,
            "description": "initial position for the animation. later position changes at the moment with: obj.skeleton.getRootBone().x and obj.skeleton.getRootBone().y. maybe a TODO for a method ;o)",
            "itemtype": "property",
            "name": "skeletonposition",
            "type": "{CG.Point}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 68,
            "description": "spine bone xscale",
            "itemtype": "property",
            "name": "xscale",
            "type": "{Number}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 75,
            "description": "spine bone yscale",
            "itemtype": "property",
            "name": "yscale",
            "type": "{Number}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 82,
            "itemtype": "property",
            "name": "scale",
            "type": "{Number}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 88,
            "itemtype": "property",
            "name": "vertices",
            "type": "{Array}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 94,
            "description": "counter for the spine image preloader",
            "itemtype": "property",
            "name": "textureCount",
            "type": "{Number}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 101,
            "description": "data from generated atlas text file. at the moment only the libGDX Format is supported from the spine-js runtime.",
            "itemtype": "property",
            "name": "spineAtlasData",
            "type": "{String}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 117,
            "description": "spine animation json data loaded and parsed thru MediaAsset.",
            "itemtype": "property",
            "name": "spineJsonData",
            "type": "{Object}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 124,
            "description": "this is used for a callback for custom spine initialization.",
            "itemtype": "property",
            "name": "initCustom",
            "type": "{Object}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 131,
            "description": "this is used for a callback for custom animation configuration.",
            "itemtype": "property",
            "name": "spineAtlas",
            "type": "{Object}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 158,
            "itemtype": "method",
            "name": "waitForTextures",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 168,
            "description": "initialises the animation (skeleton, stateData,. ,.) after preloading and calls the callback for custom animation configuration (.setSkinByName(), .setAnimationByName(),. ,.).",
            "itemtype": "method",
            "name": "initSkeleton",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 173,
            "itemtype": "property",
            "name": "skeletonJson",
            "type": "{spine.SkeletonJson}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 180,
            "itemtype": "property",
            "name": "spineJsonData",
            "type": "{Object}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 192,
            "itemtype": "property",
            "name": "skeleton",
            "type": "{spine.Skeleton}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 201,
            "itemtype": "property",
            "name": "stateData",
            "type": "{spine.AnimationStateData}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 206,
            "itemtype": "property",
            "name": "state",
            "type": "{spine.AnimationState}",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 219,
            "itemtype": "method",
            "name": "update",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 230,
            "description": "this method loops thru skeleton.drawOrder and renders all attachments of type spine.RegionAttachment.",
            "itemtype": "method",
            "name": "draw",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/spine/spine-animation.js",
            "line": 320,
            "itemtype": "method",
            "name": "updateDiff",
            "class": "CG.SpineAnimation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 24,
            "description": "Options:\nimage {string} imgpath, image object or atlasimage object to use\nposition {CG.Point}\nstartFrame {number}\nendFrame {number}\nwidth {number}\nheight {number}\n*",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 43,
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 47,
            "itemtype": "property",
            "name": "status",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 51,
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 55,
            "itemtype": "property",
            "name": "frames",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 59,
            "itemtype": "property",
            "name": "startFrame",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 63,
            "itemtype": "property",
            "name": "endFrame",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 67,
            "itemtype": "property",
            "name": "fx",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 71,
            "itemtype": "property",
            "name": "fy",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 75,
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/animation.js",
            "line": 79,
            "itemtype": "property",
            "name": "tempdelay",
            "type": "Number",
            "class": "CG.Animation",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 25,
            "description": "Options:\nimage {string} imgpath, image object or atlasimage object to use\nposition {CG.Point}\ntext {string}\nfont {CG.Font}\ncallback {function}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 49,
            "itemtype": "property",
            "name": "font",
            "type": "CG.Font",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 52,
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 55,
            "itemtype": "property",
            "name": "callback",
            "type": "Callback",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 58,
            "itemtype": "property",
            "name": "clickable",
            "type": "Boolean",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/button.js",
            "line": 62,
            "itemtype": "property",
            "name": "clicked",
            "type": "Boolean",
            "class": "CG.Button",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 20,
            "description": "Options:\nimage {string} imgpath, image object or atlasimage object to use",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "image",
                    "description": "image imgpath, image object or atlasimage object to use for the particle",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 34,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 39,
            "itemtype": "property",
            "name": "lifetime",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 44,
            "itemtype": "property",
            "name": "currtime",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 49,
            "itemtype": "property",
            "name": "aging",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 54,
            "itemtype": "property",
            "name": "fadeout",
            "type": "{Boolean}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/particle.js",
            "line": 59,
            "itemtype": "property",
            "name": "gravity",
            "type": "{Number}",
            "class": "CG.Particle",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 30,
            "description": "Opions:\nimage {string} imgpath, image object or atlasimage object to use\nposition: {CG.Point}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 46,
            "itemtype": "property",
            "name": "bound",
            "type": "CG.Bound",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 50,
            "itemtype": "property",
            "name": "xspeed",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 54,
            "itemtype": "property",
            "name": "yspeed",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 58,
            "itemtype": "property",
            "name": "boundsMode",
            "type": "False/string",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 62,
            "itemtype": "property",
            "name": "rotationspeed",
            "type": "Integer/float",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 66,
            "itemtype": "property",
            "name": "alpha",
            "type": "Float",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 70,
            "itemtype": "property",
            "name": "followobject",
            "type": "Boolean/object",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 74,
            "itemtype": "property",
            "name": "followspeed",
            "type": "Boolean/integer",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 78,
            "itemtype": "property",
            "name": "followsteps",
            "type": "Boolean/integer",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 82,
            "itemtype": "property",
            "name": "attachedobject",
            "type": "Boolean",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 86,
            "itemtype": "property",
            "name": "offsetx",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 90,
            "itemtype": "property",
            "name": "offsety",
            "type": "Number",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 101,
            "itemtype": "property",
            "name": "diffpoint",
            "type": "CG.Point",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 136,
            "description": "Checks the bound if a boundMode (bounce or slide) is set",
            "itemtype": "method",
            "name": "checkBound",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 179,
            "description": "calculate offset if bound is moving",
            "itemtype": "method",
            "name": "updateDiff",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 193,
            "description": "is there an attached element, this sprite will follow it depending on followspeed or followsteps it follows different",
            "itemtype": "method",
            "name": "follow",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 227,
            "description": "set the bound of the sprite",
            "itemtype": "method",
            "name": "setBound",
            "params": [
                {
                    "name": "bound",
                    "description": "the bound",
                    "type": "CG.Bound"
                }
            ],
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 238,
            "description": "if there is a attached object get its position",
            "itemtype": "method",
            "name": "ifAttached",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 249,
            "description": "attach a reference of the given object to this object",
            "itemtype": "method",
            "name": "attachObject",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 258,
            "description": "removes the attached object reference",
            "itemtype": "method",
            "name": "removeAttachedObject",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 267,
            "description": "set the x offset of the attached object to this object",
            "itemtype": "method",
            "name": "setAttachedOffsetX",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/sprite/sprite.js",
            "line": 276,
            "description": "set the y offset of the attached object to this object",
            "itemtype": "method",
            "name": "setAttachedOffsetY",
            "class": "CG.Sprite",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 22,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 32,
            "itemtype": "property",
            "name": "atlas",
            "type": "Image",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 36,
            "itemtype": "property",
            "name": "initText",
            "type": "String",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 40,
            "itemtype": "property",
            "name": "chars",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 44,
            "itemtype": "property",
            "name": "x",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 48,
            "itemtype": "property",
            "name": "y",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 52,
            "itemtype": "property",
            "name": "width",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 56,
            "itemtype": "property",
            "name": "height",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 60,
            "itemtype": "property",
            "name": "xoff",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 64,
            "itemtype": "property",
            "name": "yoff",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 68,
            "itemtype": "property",
            "name": "xadv",
            "type": "Array",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 72,
            "itemtype": "property",
            "name": "lineHeight",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 76,
            "itemtype": "property",
            "name": "face",
            "type": "String",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 80,
            "itemtype": "property",
            "name": "size",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 84,
            "itemtype": "property",
            "name": "bold",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 88,
            "itemtype": "property",
            "name": "italic",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 93,
            "itemtype": "property",
            "name": "base",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 97,
            "itemtype": "property",
            "name": "scaleW",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 101,
            "itemtype": "property",
            "name": "scaleH",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 105,
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 109,
            "itemtype": "property",
            "name": "currentX",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 113,
            "itemtype": "property",
            "name": "currentY",
            "type": "Number",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 126,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 135,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 144,
            "description": "draw the given text to the canvas",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "text",
                    "description": "the text to draw",
                    "type": "String"
                },
                {
                    "name": "xpos",
                    "description": "the x position",
                    "type": "Number"
                },
                {
                    "name": "ypos",
                    "description": "the y position",
                    "type": "Number"
                }
            ],
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 161,
            "description": "get the line height of the current font",
            "itemtype": "method",
            "name": "getLineHeight",
            "return": {
                "description": "lineheight",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 170,
            "description": "get the font size of the current font",
            "itemtype": "method",
            "name": "getFontSize",
            "return": {
                "description": "size  font size",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 179,
            "description": "get the width of the given text",
            "itemtype": "method",
            "name": "getTextWidth",
            "params": [
                {
                    "name": "text",
                    "description": "the string to calculate the width",
                    "type": "String"
                }
            ],
            "return": {
                "description": "textwidth",
                "type": "Number"
            },
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/font.js",
            "line": 194,
            "description": "loadFont - load and parse the given fontfile",
            "example": [
                "\n    gill = new CG.Font().loadFont({\n       font: this.asset.getFontByName('gill')\n    })"
            ],
            "itemtype": "method",
            "name": "loadFont",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "CG.Font",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 19,
            "description": "Options:\nfont {object}",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 34,
            "itemtype": "property",
            "name": "font",
            "type": "CG.Font",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 38,
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 43,
            "itemtype": "property",
            "name": "textcurrent",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 48,
            "itemtype": "property",
            "name": "x  the x position",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 53,
            "itemtype": "property",
            "name": "y  the y position",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 58,
            "itemtype": "property",
            "name": "width  width of textbox",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 63,
            "itemtype": "property",
            "name": "height  height of textbox",
            "type": "Number",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 68,
            "itemtype": "property",
            "name": "textAlign  alignment of text",
            "type": "String",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 91,
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "text",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 100,
            "itemtype": "method",
            "name": "update",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/text/text.js",
            "line": 106,
            "itemtype": "method",
            "name": "draw",
            "class": "CG.Text",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 23,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 32,
            "itemtype": "property",
            "name": "elements",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 41,
            "itemtype": "property",
            "name": "points",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 46,
            "itemtype": "property",
            "name": "areas",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 51,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 56,
            "itemtype": "property",
            "name": "mapOffset",
            "type": "{CG.Point}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 61,
            "itemtype": "property",
            "name": "changemap",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 66,
            "description": "If set to true the map is being updated with method updateAnimation.\nSee also method description of updateAnimation!",
            "itemtype": "property",
            "name": "animated",
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 76,
            "itemtype": "property",
            "name": "animDelayFactor",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 81,
            "itemtype": "property",
            "name": "atlas",
            "type": "{Image}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 86,
            "itemtype": "property",
            "name": "atlaswidth",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 91,
            "itemtype": "property",
            "name": "atlasheight",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 96,
            "itemtype": "property",
            "name": "atlastranscol",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 103,
            "itemtype": "property",
            "name": "xml",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 108,
            "itemtype": "property",
            "name": "parser",
            "type": "{DOMParser}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 113,
            "itemtype": "property",
            "name": "xmlDoc",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 119,
            "itemtype": "property",
            "name": "json",
            "type": "{Object}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 124,
            "description": "The tiled layer are parsed into separate layers",
            "itemtype": "property",
            "name": "layers",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 133,
            "description": "Defines the layer to draw:\nall - for all layers\nname - the name of layer to draw\nindex - array index of layer",
            "itemtype": "property",
            "name": "renderlayer",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 145,
            "itemtype": "property",
            "name": "tileproperties",
            "type": "{Array}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 150,
            "itemtype": "property",
            "name": "orientation",
            "type": "{String}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 155,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 160,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 165,
            "itemtype": "property",
            "name": "mapColumns",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 170,
            "itemtype": "property",
            "name": "mapRows",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 175,
            "itemtype": "property",
            "name": "tilewidth",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 180,
            "itemtype": "property",
            "name": "tileheight",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 185,
            "itemtype": "property",
            "name": "tileset",
            "type": "{Object}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 197,
            "itemtype": "property",
            "name": "xspeed",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 202,
            "itemtype": "property",
            "name": "yspeed",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 207,
            "itemtype": "property",
            "name": "xscale",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 212,
            "itemtype": "property",
            "name": "yscale",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 217,
            "itemtype": "property",
            "name": "alpha",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 222,
            "itemtype": "property",
            "name": "wrapX",
            "deprecated": true,
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 228,
            "itemtype": "property",
            "name": "wrapY",
            "deprecated": true,
            "type": "{Boolean}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 234,
            "itemtype": "property",
            "name": "layertocheck",
            "type": "{Number}",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 244,
            "description": "Load and parse an xml tilemap file. It can handle the tiled XML and CSV format.\nAll other formats are not supported!",
            "itemtype": "method",
            "name": "loadMapXml",
            "params": [
                {
                    "name": "xmlfile",
                    "description": "xmlfile path or mediaasset object with data of tiled map xml",
                    "type": "String/object"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 440,
            "description": "Load and parse an tilemap json file. Use the tiled json export.\nHopefully the json format has the same functionality as the xml loader ;o)",
            "itemtype": "method",
            "name": "loadMapJson",
            "params": [
                {
                    "name": "jsonfile",
                    "description": "jsonfile path or mediaasset object with data of tiled map xml",
                    "type": "String/object"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 570,
            "description": "This is the main method for map drawing. Orthogonal maps works very well. Isometric maps are not well implemented yet.",
            "itemtype": "method",
            "name": "drawMap",
            "params": [
                {
                    "name": "sx",
                    "description": "sx top left coord for canvas drawing",
                    "type": "Number"
                },
                {
                    "name": "sy",
                    "description": "sy top left coord for canvas drawing",
                    "type": "Number"
                },
                {
                    "name": "bx",
                    "description": "bx top left x coord of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "by",
                    "description": "by top left y coord of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "bw",
                    "description": "bw width of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "bh",
                    "description": "bh height of bound in tilemap",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "callback for collision handling - callback(obj,maptileproperties)",
                    "type": "Callback"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 726,
            "description": "Update all areas and points elements.",
            "itemtype": "method",
            "name": "updatePointsAndAreas",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 743,
            "description": "Get all point(s) with the given name in the points",
            "itemtype": "method",
            "name": "getPointsByName",
            "params": [
                {
                    "name": "name",
                    "description": "name of the points to return",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or an array with point(s)",
                "type": "False/array"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 766,
            "description": "Get all areas with the given name",
            "itemtype": "method",
            "name": "getAreasByName",
            "params": [
                {
                    "name": "name",
                    "description": "name of the area(s) to return",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns false or an array with area(s)",
                "type": "False/array"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 790,
            "description": "Defines layer drawing, See property options",
            "itemtype": "method",
            "name": "setLayerToRender",
            "params": [
                {
                    "name": "mixed",
                    "description": "mixed define the map layer(s) to render 'all' (string) for all layers, array index (integer) for layer to render or 'name' (string) of layer to render'",
                    "type": "Mixed"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 804,
            "description": "The update method is not complete yet and only experimental.\nAt the final stage the methods updateAnimation and updatePointsAndAreas have to be called from here!\nThen also a map class can be added to a layer as an element for auto update/draw from Game.director!",
            "itemtype": "method",
            "name": "update",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 838,
            "description": "Get the bounds of the map",
            "itemtype": "method",
            "name": "getBounds",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 852,
            "description": "Updates all tilemap properties of the map.\n\nSupported custom tiled map properties for now are (see also tilemap examples):\nanim_delay       => time to used to display an switch to next tile\nanim_direction   => direction for next tile 1 = jump forward, -1 = jump back\nanim_next        => defines the offset\n\nWith this tile properties it is possible to define tilemap animations.\nThese must be defined in the tilemap property window with key/value pairs",
            "itemtype": "method",
            "name": "updateAnimation",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 904,
            "description": "Adds a object to the element array, used at the moment for collision detection to tilemap.",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "element",
                    "description": "to to add to elements array",
                    "type": "Obj"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 918,
            "description": "Checks if the attached element collides with an tile of the tilemap",
            "itemtype": "method",
            "name": "checkMapCollision",
            "params": [
                {
                    "name": "element",
                    "description": "to check for",
                    "type": "Obj"
                },
                {
                    "name": "rx",
                    "description": "current rx of rendermap method",
                    "type": "Number"
                },
                {
                    "name": "ry",
                    "description": "current ry of rendermap method",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "returns true or false",
                "type": "Boolean"
            },
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 950,
            "description": "Checks if a external object(s) collides with the areas of the tiled map.\nThis can be elements from an layer or the map itself.",
            "itemtype": "method",
            "name": "checkElementsToAreasCollision",
            "params": [
                {
                    "name": "objarray",
                    "description": "to check for a areas collision",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "what should happen",
                    "type": "Callback"
                }
            ],
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 967,
            "description": "removes the json data of the map object",
            "itemtype": "method",
            "name": "removeJsonData",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/map.js",
            "line": 975,
            "description": "removes the xml data of the map object",
            "itemtype": "method",
            "name": "removeXmlData",
            "class": "CG.Map",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 26,
            "description": "Options:\nname {string}\nbound {CG.Bound}\nmapOffset {CG.Point}\ntype {mixed} false, inner or outer",
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 40,
            "itemtype": "property",
            "name": "initbound",
            "type": "{CG.Bound}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 55,
            "itemtype": "property",
            "name": "name",
            "type": "{String}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 60,
            "itemtype": "property",
            "name": "type",
            "type": "{String}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maparea.js",
            "line": 66,
            "itemtype": "property",
            "name": "bound",
            "type": "{CG.Bound}",
            "class": "CG.MapArea",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 22,
            "description": "Options:\nname {string}\nposition {CG.Point}\nmapOffset {CG.Point}\ngid {Number}",
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 37,
            "itemtype": "property",
            "name": "gid",
            "type": "{Number}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 42,
            "itemtype": "property",
            "name": "name",
            "type": "{*}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 47,
            "itemtype": "property",
            "name": "initPosition",
            "type": "{CG.Point}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/mappoint.js",
            "line": 52,
            "itemtype": "property",
            "name": "position",
            "type": "{CG.Point}",
            "class": "CG.MapPoint",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 10,
            "is_constructor": 1,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 16,
            "itemtype": "property",
            "name": "width",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 21,
            "itemtype": "property",
            "name": "height",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 26,
            "itemtype": "property",
            "name": "visible",
            "type": "{Boolean}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 31,
            "itemtype": "property",
            "name": "opacity",
            "type": "{Number}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptilelayer.js",
            "line": 36,
            "itemtype": "property",
            "name": "tiles",
            "type": "{Array}",
            "class": "CG.MapTileLayer",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 10,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 16,
            "itemtype": "property",
            "name": "animated",
            "type": "{Boolean}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 21,
            "itemtype": "property",
            "name": "animDelay",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 26,
            "itemtype": "property",
            "name": "animDirection",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 31,
            "itemtype": "property",
            "name": "animNext",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        },
        {
            "file": "cangaja/tilemap/maptileproperties.js",
            "line": 36,
            "itemtype": "property",
            "name": "delayTimer",
            "type": "{Number}",
            "class": "CG.MapTileProperties",
            "module": "CG"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:192"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:362"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:372"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/base/bitmap.js:387"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/box2d/b2d-polygon.js:159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/box2d/b2d-terrain.js:312"
        },
        {
            "message": "unknown tag: xtend",
            "line": " cangaja/box2d/b2d-world.js:1"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " cangaja/renderer/canvasrenderer.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " cangaja/text/text.js:91"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: Apple\nDate: 23.07.13\nTime: 22:43\nTo change this template use File | Settings | File Templates.",
            "line": " cangaja/base/clock.js:1"
        },
        {
            "message": "Missing item type\nmillisecond value returned by Date.now(). Will always",
            "line": " cangaja/base/clock.js:12"
        },
        {
            "message": "Missing item type\nthe number of milliseconds between the epoch (January 1, 1970)",
            "line": " cangaja/base/clock.js:17"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:24"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:29"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:33"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:37"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:41"
        },
        {
            "message": "Missing item type\nThe tick() method updates ALL the Clock members, which should only\nbe read from and never written to manually. It is recommended that\ntick() is called from a callback loop using requestAnimationFrame\n\nLearn more: http://paulirish.com/2011/requestanimationframe-for-smart-animating/",
            "line": " cangaja/base/clock.js:45"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:53"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:57"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:60"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:65"
        },
        {
            "message": "Missing item type",
            "line": " cangaja/base/clock.js:71"
        },
        {
            "message": "Missing item type\n© 2013 by Christian Sonntag <info@motions-media.de>\nsimple experimental Canvas Game JavaScript Framework\n\nhttps://www.github.com/samowitsch/cangaja/\n\nIncludes:\nhammer.js\nbuzz.js\nBox2Html5.js\nclipper.js\npoly2tri.js\nspine.js",
            "line": " cangaja/base/intro.js:1"
        }
    ]
}